{"version":3,"file":"static/js/4204.284cb30a.chunk.js","mappings":"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","sources":["components/AssetPage/InteractiveComponent.tsx","components/Card/Card.tsx","components/ChakraCarousel/ChakraCarousel.js","components/Scrollable/Scrollable.tsx","components/TransactionList/TransactionList.tsx","hooks/useBoundingRect/useBoundingRect.ts"],"sourcesContent":["import type { AssetId } from 'constants/types'\nimport React, { useMemo, useState } from 'react'\nimport { MdKeyboardArrowLeft } from 'react-icons/md'\nimport { useThemeProvider } from 'contexts/ThemeProvider'\nimport { Translation } from 'components/Translation/Translation'\nimport { usePortfolioProvider } from 'contexts/PortfolioProvider'\nimport { HStack, VStack, Button, Flex, Text } from '@chakra-ui/react'\nimport { TransactionList } from 'components/TransactionList/TransactionList'\nimport { OperativeComponent, OperativeComponentAction } from 'components/OperativeComponent/OperativeComponent'\n\ntype InteractiveComponentArgs = {\n  vaultId?: AssetId\n  assetId?: AssetId\n  actions: OperativeComponentAction[]\n}\n\nexport const InteractiveComponent: React.FC<InteractiveComponentArgs> = ({ assetId, vaultId, actions }) => {\n  const { isMobile } = useThemeProvider()\n  const [ showDeposit, setShowDeposit ] = useState<boolean>(false)\n  const { selectors: { selectAssetById } } = usePortfolioProvider()\n  const [ showTransactions, setShowTransactions ] = useState<boolean>(false)\n\n  return (\n    <>\n      <VStack\n        left={0}\n        zIndex={40}\n        spacing={[0, 6]}\n        id={'right-side'}\n        width={['100vw', '27em']}\n        height={['100vh', 'auto']}\n        position={['fixed', 'relative']}\n        top={[showDeposit ? 0 : '100vh', 0]}\n        bg={isMobile ? 'rgba(0, 0, 0, 0.5)' : undefined}\n        sx={isMobile ? {transition:'top 0.3s ease-in-out'} : {}}\n      >\n        <VStack\n          bottom={0}\n          spacing={0}\n          width={'100%'}\n          height={['100vh', 'auto']}\n          position={['fixed', 'relative']}\n          top={[showDeposit ? 0 : '100vh', 0]}\n          sx={isMobile ? {transition:'top 0.3s ease-in-out'} : {}}\n        >\n          {\n            isMobile && (\n              <HStack\n                px={4}\n                py={2}\n                bg={'card.bg'}\n                width={'100%'}\n                borderBottom={'1px solid'}\n                borderBottomColor={'divider'}\n                justifyContent={'space-between'}\n              >\n                <Translation alignItems={'center'} display={'flex'} variant={'unstyled'} translation={'common.exit'} component={Button} leftIcon={<MdKeyboardArrowLeft size={24} />} onClick={() => setShowDeposit(false)} />\n                <Translation alignItems={'center'} display={'flex'} variant={'unstyled'} translation={['common.show', 'navBar.transactions']} component={Button} onClick={() => setShowTransactions(true)} />\n              </HStack>\n            )\n          }\n          <OperativeComponent flex={1} minHeight={isMobile ? 'auto' : '590px'} borderRadius={isMobile ? 0 : undefined} assetId={assetId} actions={actions} />\n        </VStack>\n        <VStack\n          flex={1}\n          bottom={0}\n          spacing={0}\n          width={'100%'}\n          height={['100vh', 'auto']}\n          position={['fixed', 'relative']}\n          top={[showTransactions ? 0 : '100vh', 0]}\n          sx={isMobile ? {transition:'top 0.3s ease-in-out'} : {}}\n        >\n          {\n            isMobile && (\n              <HStack\n                px={4}\n                py={2}\n                bg={'card.bg'}\n                width={'100%'}\n                borderBottom={'1px solid'}\n                borderBottomColor={'divider'}\n                justifyContent={'space-between'}\n              >\n                <Translation alignItems={'center'} display={'flex'} variant={'unstyled'} translation={'common.back'} component={Button} leftIcon={<MdKeyboardArrowLeft size={24} />} onClick={() => setShowTransactions(false)} />\n                <Translation textStyle={'ctaStatic'} translation={'assets.assetDetails.assetHistory.transactionHistory'} component={Text} />\n              </HStack>\n            )\n          }\n          <TransactionList assetIds={[vaultId as AssetId]} maxH={[400, 600]} />\n        </VStack>\n      </VStack>\n      {\n        isMobile && (\n          <Flex\n            p={4}\n            left={0}\n            bottom={0}\n            border={0}\n            zIndex={30}\n            width={'100%'}\n            bg={'card.bgDark'}\n            position={'fixed'}\n          >\n            <Translation component={Button} translation={['common.start', 'common.deposit']} variant={'ctaFull'} onClick={() => setShowDeposit(true)} />\n          </Flex>\n        )\n      }\n    </>\n  )\n}","import { Heading, Flex, Box, FlexProps, BoxProps, ThemingProps } from '@chakra-ui/react'\n\nexport type CardProps = BoxProps & ThemingProps \n\nconst HeadingTitle = (props: CardProps) => {\n  const { children, ...rest } = props\n  return (\n    <Heading as={'h3'} size={'md'} mb={6} {...rest}>{children}</Heading>\n  )\n}\n\nexport const Card = (props: CardProps) => {\n  const { children, layerStyle, ...rest } = props\n  return (\n    <Box\n      width={'100%'}\n      position={'relative'}\n      layerStyle={layerStyle || 'card'}\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport const CardFlex = (props: CardProps & FlexProps) => {\n  const { children, layerStyle, ...rest } = props\n  return (\n    <Flex\n      width={'100%'}\n      layerStyle={layerStyle || 'card'}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport const Dark = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardDark'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nexport const Light = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardLight'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nexport const Outline = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardOutline'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nCard.Dark = Dark\nCard.Light = Light\nCard.Flex = CardFlex\nCard.Outline = Outline\nCard.Heading = HeadingTitle","//TODO: Properly handle user tabbing\n\nimport React, {\n  useLayoutEffect,\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n  useRef\n} from \"react\";\n\nimport {\n  // useMediaQuery,\n  // useTheme,\n  // Progress,\n  VStack,\n  // Button,\n  Flex,\n  // Box\n} from \"@chakra-ui/react\";\n\nimport useBoundingRect from \"hooks/useBoundingRect/useBoundingRect\";\n// import { ChevronRightIcon, ChevronLeftIcon } from \"@chakra-ui/icons\";\nimport { motion, useAnimation, useMotionValue } from \"framer-motion\";\n\nconst MotionFlex = motion(Flex);\n\n// function percentage(x, y) {\n//   return 100 / (y / x)\n// }\n\nconst transitionProps = {\n  stiffness: 400,\n  type: \"spring\",\n  damping: 60,\n  mass: 3\n};\n\nexport const ChakraCarousel = ({\n  children,\n  gap,\n  activeItem: defaultActiveItem = 0,\n  enableDragging = false\n}) => {\n\n  const [trackIsActive, setTrackIsActive] = useState(false);\n  const [multiplier, setMultiplier] = useState(0.35);\n  const [sliderWidth, setSliderWidth] = useState(0);\n  const [activeItem, setActiveItem] = useState(defaultActiveItem);\n  const [constraint, setConstraint] = useState(0);\n  const [itemWidth, setItemWidth] = useState(0);\n\n  const initSliderWidth = useCallback((width) => setSliderWidth(width), []);\n\n  const positions = useMemo(\n    () => React.Children.map(children, (_, index) => -Math.abs((itemWidth + gap) * index)),\n    [children, itemWidth, gap]\n  );\n\n  // const { breakpoints } = useTheme();\n\n  // const [isBetweenBaseAndMd] = useMediaQuery(\n  //   `(min-width: ${breakpoints.base}) and (max-width: ${breakpoints.md})`\n  // );\n\n  // const [isBetweenMdAndXl] = useMediaQuery(\n  //   `(min-width: ${breakpoints.md}) and (max-width: ${breakpoints.xl})`\n  // );\n\n  // const [isGreaterThanXL] = useMediaQuery(`(min-width: ${breakpoints.xl})`);\n\n  useEffect(() => {\n    if (defaultActiveItem>0 || defaultActiveItem<positions.length-1){\n      setActiveItem(defaultActiveItem)\n    }\n  }, [positions, defaultActiveItem])\n\n  useEffect(() => {\n    // console.log('itemWidth', sliderWidth, gap, sliderWidth - gap)\n    setItemWidth(sliderWidth - gap);\n    setMultiplier(0.65);\n    setConstraint(1);\n    /*\n    if (isBetweenBaseAndMd) {\n      setItemWidth(sliderWidth - gap);\n      setMultiplier(0.65);\n      setConstraint(1);\n    }\n    if (isBetweenMdAndXl) {\n      setItemWidth(sliderWidth / 2 - gap);\n      setMultiplier(0.5);\n      setConstraint(2);\n    }\n    if (isGreaterThanXL) {\n      setItemWidth(sliderWidth / 3 - gap);\n      setMultiplier(0.35);\n      setConstraint(3);\n    }\n    */\n  }, [/*isBetweenBaseAndMd, isBetweenMdAndXl, isGreaterThanXL, */sliderWidth, gap]);\n\n  const sliderProps = {\n    setTrackIsActive,\n    initSliderWidth,\n    setActiveItem,\n    activeItem,\n    constraint,\n    itemWidth,\n    positions,\n    gap\n  };\n\n  const trackProps = {\n    setTrackIsActive,\n    enableDragging,\n    trackIsActive,\n    setActiveItem,\n    sliderWidth,\n    activeItem,\n    constraint,\n    multiplier,\n    itemWidth,\n    positions,\n    gap\n  };\n\n  const itemProps = {\n    setTrackIsActive,\n    trackIsActive,\n    setActiveItem,\n    activeItem,\n    constraint,\n    itemWidth,\n    positions,\n    gap\n  };\n\n  // console.log('itemProps', isBetweenBaseAndMd, isBetweenMdAndXl, isGreaterThanXL, sliderWidth, itemProps)\n\n  return (\n    <Slider {...sliderProps}>\n      <Track {...trackProps}>\n        {React.Children.map(children, (child, index) => (\n          <Item {...itemProps} index={index} key={index}>\n            {child}\n          </Item>\n        ))}\n      </Track>\n    </Slider>\n  );\n};\n\nconst Slider = ({\n  // setTrackIsActive,\n  initSliderWidth,\n  // setActiveItem,\n  // activeItem,\n  // constraint,\n  // itemWidth,\n  // positions,\n  children,\n  gap\n}) => {\n  const [ref, { width }] = useBoundingRect();\n\n  useLayoutEffect(() => initSliderWidth(Math.round(width)), [\n    width,\n    initSliderWidth\n  ]);\n\n  // const handleFocus = () => setTrackIsActive(true);\n\n  // const handleDecrementClick = () => {\n  //   setTrackIsActive(true);\n  //   !(activeItem === positions.length - positions.length) &&\n  //     setActiveItem((prev) => prev - 1);\n  // }\n\n  // const handleIncrementClick = () => {\n  //   setTrackIsActive(true);\n  //   !(activeItem === positions.length - constraint) &&\n  //     setActiveItem((prev) => prev + 1);\n  // }\n\n  return (\n    <Flex\n      flex={1}\n      ref={ref}\n      w={{ base: \"100%\", md: `calc(100% + ${gap}px)` }}\n      ml={{ base: 0, md: `-${gap / 2}px` }}\n      mt={0}\n      px={`${gap / 2}px`}\n      position=\"relative\"\n      overflow=\"hidden\"\n      _before={{\n        bgGradient: \"linear(to-r, base.d400, transparent)\",\n        position: \"absolute\",\n        w: `${gap / 2}px`,\n        content: \"''\",\n        zIndex: 1,\n        h: \"100%\",\n        left: 0,\n        top: 0\n      }}\n      _after={{\n        bgGradient: \"linear(to-l, base.d400, transparent)\",\n        position: \"absolute\",\n        w: `${gap / 2}px`,\n        content: \"''\",\n        zIndex: 1,\n        h: \"100%\",\n        right: 0,\n        top: 0\n      }}\n    >\n      {children}\n    </Flex>\n    /*\n    <>\n        <Flex w={`${itemWidth}px`} mt={`${gap / 2}px`} mx=\"auto\">\n          <Button\n            onClick={handleDecrementClick}\n            onFocus={handleFocus}\n            mr={`${gap / 3}px`}\n            color=\"gray.200\"\n            variant=\"link\"\n            minW={0}\n          >\n            <ChevronLeftIcon boxSize={9} />\n          </Button>\n\n          <Progress\n            value={percentage(activeItem, positions.length - constraint)}\n            alignSelf=\"center\"\n            borderRadius=\"2px\"\n            bg=\"base.d100\"\n            flex={1}\n            h=\"3px\"\n            sx={{\n              \"> div\": {\n                backgroundColor: \"gray.400\"\n              }\n            }}\n          />\n\n          <Button\n            onClick={handleIncrementClick}\n            onFocus={handleFocus}\n            ml={`${gap / 3}px`}\n            color=\"gray.200\"\n            variant=\"link\"\n            zIndex={2}\n            minW={0}\n          >\n            <ChevronRightIcon boxSize={9} />\n          </Button>\n        </Flex>\n    </>\n    */\n  );\n};\n\nconst Track = ({\n  setTrackIsActive,\n  enableDragging,\n  trackIsActive,\n  setActiveItem,\n  activeItem,\n  constraint,\n  multiplier,\n  itemWidth,\n  positions,\n  children\n}) => {\n  const [dragStartPosition, setDragStartPosition] = useState(0);\n  const controls = useAnimation();\n  const x = useMotionValue(0);\n  const node = useRef(null);\n\n  const handleDragStart = () => setDragStartPosition(positions[activeItem]);\n\n  const handleDragEnd = (_, info) => {\n    // console.log(info);\n    const distance = info.offset.x;\n    const velocity = info.velocity.x * multiplier;\n    const direction = velocity < 0 || distance < 0 ? 1 : -1;\n\n    const extrapolatedPosition =\n      dragStartPosition +\n      (direction === 1\n        ? Math.min(velocity, distance)\n        : Math.max(velocity, distance));\n\n    const closestPosition = positions.reduce((prev, curr) => {\n      return Math.abs(curr - extrapolatedPosition) <\n        Math.abs(prev - extrapolatedPosition)\n        ? curr\n        : prev;\n    }, 0);\n\n    if (!(closestPosition < positions[positions.length - constraint])) {\n      setActiveItem(positions.indexOf(closestPosition));\n      controls.start({\n        x: closestPosition,\n        transition: {\n          velocity: info.velocity.x,\n          ...transitionProps\n        }\n      });\n    } else {\n      setActiveItem(positions.length - constraint);\n      controls.start({\n        x: positions[positions.length - constraint],\n        transition: {\n          velocity: info.velocity.x,\n          ...transitionProps\n        }\n      });\n    }\n  };\n\n  const handleResize = useCallback(\n    () =>\n      controls.start({\n        x: positions[activeItem],\n        transition: {\n          ...transitionProps\n        }\n      }),\n    [activeItem, controls, positions]\n  );\n\n  const handleClick = useCallback(\n    (event) =>\n      node.current.contains(event.target)\n        ? setTrackIsActive(true)\n        : setTrackIsActive(false),\n    [setTrackIsActive]\n  );\n\n  const handleKeyDown = useCallback(\n    (event) => {\n      if (trackIsActive) {\n        if (activeItem < positions.length - constraint) {\n          if (event.key === \"ArrowRight\" || event.key === \"ArrowUp\") {\n            event.preventDefault();\n            setActiveItem((prev) => prev + 1);\n          }\n        }\n        if (activeItem > positions.length - positions.length) {\n          if (event.key === \"ArrowLeft\" || event.key === \"ArrowDown\") {\n            event.preventDefault();\n            setActiveItem((prev) => prev - 1);\n          }\n        }\n      }\n    },\n    [trackIsActive, setActiveItem, activeItem, constraint, positions.length]\n  );\n\n  useEffect(() => {\n    handleResize(positions);\n\n    // document.addEventListener(\"keydown\", handleKeyDown);\n    // document.addEventListener(\"mousedown\", handleClick);\n    // return () => {\n    //   document.removeEventListener(\"keydown\", handleKeyDown);\n    //   document.removeEventListener(\"mousedown\", handleClick);\n    // };\n  }, [handleClick, handleResize, handleKeyDown, positions]);\n\n  const dragProps = enableDragging ? {\n    drag:\"x\",\n    cursor:\"grab\",\n    onDragStart:handleDragStart,\n    onDragEnd:handleDragEnd,\n    _active:{cursor: \"grabbing\"},\n  } : {}\n\n  return (\n    <>\n      {itemWidth ? (\n        <VStack ref={node} spacing={5} alignItems=\"stretch\">\n          <MotionFlex\n            flex={1}\n            dragConstraints={node}\n            animate={controls}\n            style={{ x }}\n            minWidth=\"min-content\"\n            flexWrap=\"nowrap\"\n            {...dragProps}\n          >\n            {children}\n          </MotionFlex>\n        </VStack>\n      ) : null}\n    </>\n  );\n};\n\nconst Item = ({\n  setTrackIsActive,\n  setActiveItem,\n  activeItem,\n  constraint,\n  itemWidth,\n  positions,\n  children,\n  index,\n  gap\n}) => {\n  const [userDidTab, setUserDidTab] = useState(false);\n\n  const handleFocus = () => setTrackIsActive(true);\n\n  const handleBlur = () => {\n    userDidTab && index + 1 === positions.length && setTrackIsActive(false);\n    setUserDidTab(false);\n  };\n\n  const handleKeyUp = (event) =>\n    event.key === \"Tab\" &&\n    !(activeItem === positions.length - constraint) &&\n    setActiveItem(index);\n\n  const handleKeyDown = (event) => event.key === \"Tab\" && setUserDidTab(true);\n\n  return (\n    <Flex\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onKeyUp={handleKeyUp}\n      onKeyDown={handleKeyDown}\n      w={`${itemWidth}px`}\n      _notLast={{\n        mr: `${gap}px`\n      }}\n    >\n      {children}\n    </Flex>\n  );\n};","import React from 'react'\nimport { FlexProps, Flex } from '@chakra-ui/react'\n\ntype ScrollableArgs = {\n  parentRef?: any\n} & FlexProps\n\nexport const Scrollable: React.FC<ScrollableArgs> = ({parentRef, children, ...flexProps}) => {\n  return (\n    <Flex\n      flex={1}\n      width={'100%'}\n      overflowY={'auto'}\n      overflowX={'hidden'}\n      direction={'column'}\n      alignItems={'flex-start'}\n      {...flexProps}\n    >\n      {children}\n    </Flex>\n  )\n}","import { Icon } from 'components/Icon/Icon'\nimport React, { useMemo, useRef } from 'react'\nimport { DATETIME_FORMAT } from 'constants/vars'\nimport { Amount } from 'components/Amount/Amount'\nimport { formatDate, sortArrayByKey } from 'helpers/'\nimport { Card, CardProps } from 'components/Card/Card'\nimport { useWalletProvider } from 'contexts/WalletProvider'\nimport type { AssetId, Transaction } from 'constants/types'\nimport { Scrollable } from 'components/Scrollable/Scrollable'\nimport { Translation } from 'components/Translation/Translation'\nimport { usePortfolioProvider } from 'contexts/PortfolioProvider'\nimport useBoundingRect from \"hooks/useBoundingRect/useBoundingRect\"\nimport { AssetProvider } from 'components/AssetProvider/AssetProvider'\nimport { VStack, HStack, Flex, Text, Skeleton } from '@chakra-ui/react'\nimport { TransactionLink } from 'components/TransactionLink/TransactionLink'\n\ntype TransactionItemArgs = {\n  transaction: Transaction\n}\n\nconst TransactionItem: React.FC<TransactionItemArgs> = ({ transaction }) => {\n  return (\n    <AssetProvider\n      wrapFlex={false}\n      assetId={transaction.assetId}\n    >\n      <VStack\n        mb={2}\n        pb={4}\n        spacing={4}\n        width={'100%'}\n        alignItems={'flex-start'}\n        borderBottomWidth={'1px'}\n        borderBottomColor={'divider'}\n      >\n        <HStack\n          width={'100%'}\n          justifyContent={'space-between'}\n        >\n          <HStack\n            spacing={3}\n            direction={'row'}\n            alignItems={'center'}\n          >\n            {/*<Icon IconComponent={transaction.icon} width={24} height={24} size={24} />*/}\n            <Translation component={Text} translation={`transactionRow.${transaction.action}`} textStyle={'captionSmall'} />\n          </HStack>\n          <Text textStyle={'captionSmall'}>{formatDate(+transaction.timeStamp*1000, DATETIME_FORMAT)}</Text>\n        </HStack>\n        <HStack\n          width={'100%'}\n          justifyContent={'space-between'}\n        >\n          <HStack\n            spacing={2}\n            alignItems={'center'}\n          >\n            <AssetProvider.Icon size={'xs'} />\n            <HStack\n              spacing={1}\n              alignItems={'center'}\n            >\n              <Amount value={transaction.underlyingAmount} decimals={4} textStyle={'tableCell'} />\n              <AssetProvider.Name textStyle={'tableCell'} />\n            </HStack>\n          </HStack>\n          <TransactionLink hash={transaction.hash} />\n        </HStack>\n      </VStack>\n    </AssetProvider>\n  )\n}\n\ntype TransactionListArgs = {\n  assetIds?: AssetId[]\n  showTitleOnMobile?: boolean\n} & CardProps\n\nexport const TransactionList: React.FC<TransactionListArgs> = ({ assetIds, showTitleOnMobile = false, ...cardProps }) => {\n  const { account } = useWalletProvider()\n  const [ ref, dimensions ] = useBoundingRect()\n  const { isPortfolioLoaded, isVaultsPositionsLoaded, selectors: { selectVaultTransactions, selectVaultGauge } } = usePortfolioProvider()\n\n  const transactions: Transaction[] = useMemo(() => {\n    if (!account || !assetIds || !selectVaultTransactions || !selectVaultGauge) return []\n\n    return assetIds.reduce( (transactions: Transaction[], assetId: AssetId) => {\n      const gaugeVault = selectVaultGauge(assetId)\n      const vaultTransactions: Transaction[] = selectVaultTransactions(assetId)\n      const gaugeTransactions: Transaction[] = gaugeVault ? selectVaultTransactions(gaugeVault.id) : []\n      return [\n        ...transactions,\n        ...vaultTransactions,\n        ...gaugeTransactions\n      ]\n    }, [])\n\n  }, [account, assetIds, selectVaultTransactions, selectVaultGauge])\n\n  const isLoaded = useMemo(() => {\n    return isPortfolioLoaded && (!account || isVaultsPositionsLoaded)\n  }, [isPortfolioLoaded, account, isVaultsPositionsLoaded])\n\n  const transactionsList = useMemo(() => {\n    return isLoaded ?\n      transactions.length>0 ? \n        sortArrayByKey(transactions, 'timeStamp', 'desc').map( (transaction: Transaction) => (\n          <TransactionItem key={`tx_${transaction.hash}`} transaction={transaction} />\n        ))\n      : (\n        <Flex\n          flex={1}\n          minH={250}\n          width={'100%'}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Translation component={Text} translation={'assets.assetDetails.assetHistory.emptyTransactions'} />\n        </Flex>\n      )\n    : (\n      <VStack\n        spacing={4}\n        width={'100%'}\n      >\n        <Skeleton width={'100%'} height={10} />\n        <Skeleton width={'100%'} height={10} />\n        <Skeleton width={'100%'} height={10} />\n        <Skeleton width={'100%'} height={10} />\n      </VStack>\n    )\n  }, [isLoaded, transactions])\n\n  return (\n    <Card\n      flex={1}\n      {...cardProps}\n    >\n      <VStack\n        flex={1}\n        spacing={0}\n        height={'100%'}\n        alignItems={'flex-start'}\n        ref={ref as typeof useRef}\n        justifyContent={'flex-start'}\n      >\n        <Translation display={showTitleOnMobile ? 'block' : ['none', 'block']} component={Card.Heading} translation={'assets.assetDetails.assetHistory.transactionHistory'} />\n        <Scrollable maxH={[280, Math.max(dimensions?.height || 400)]}>\n          {transactionsList}\n        </Scrollable>\n      </VStack>\n    </Card>\n  )\n}","import { requestTimeout } from 'helpers/'\nimport { useState, useCallback, useLayoutEffect } from \"react\";\n\n// let timeoutRequest: any = null;\n\nconst debounce = (delay: number = 0, callback: Function) => {\n  let timeoutId: any = null;\n  return (...args: any[]) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(callback, delay, args);\n\n    // if (timeoutRequest) {\n    //   timeoutRequest.clear();\n    // }\n    // timeoutRequest = requestTimeout(callback, delay);\n  };\n};\n\nexport type Dimensions = {\n  x: number\n  y: number\n  top: number\n  left: number\n  width: number\n  height: number\n  right: number\n  bottom: number\n}\n\nconst initialDimensions: Dimensions = {\n  x: 0,\n  y: 0,\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0,\n  right: 0,\n  bottom: 0\n}\n\nfunction getDimensionObject(node: any): Dimensions {\n  const rect = node.getBoundingClientRect();\n  return {\n    x: rect.x,\n    y: rect.y,\n    top: rect.top,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    right: rect.right,\n    bottom: rect.bottom\n  };\n}\n\nexport default function useBoundingRect(delay: number = 0) {\n  const [node, setNode] = useState<any>(null);\n  const [dimensions, setDimensions] = useState<Dimensions>(initialDimensions);\n\n  const ref = useCallback((node: any) => {\n    setNode(node);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (\"undefined\" !== typeof window && node) {\n      const measure = async () => {\n        window.requestAnimationFrame(() => {\n          // console.log('measure', getDimensionObject(node))\n          setDimensions(getDimensionObject(node))\n        });\n      }\n\n      measure();\n\n      const listener = debounce(delay || 100, measure);\n\n      window.addEventListener(\"resize\", listener);\n      window.addEventListener(\"scroll\", listener);\n      \n      return () => {\n        window.removeEventListener(\"resize\", listener);\n        window.removeEventListener(\"scroll\", listener);\n      };\n    }\n  }, [node, delay]);\n\n  return [ref, dimensions, node];\n}\n"],"names":["InteractiveComponent","assetId","vaultId","actions","isMobile","useThemeProvider","useState","showDeposit","setShowDeposit","usePortfolioProvider","selectors","selectAssetById","showTransactions","setShowTransactions","left","zIndex","spacing","id","width","height","position","top","bg","undefined","sx","transition","bottom","px","py","borderBottom","borderBottomColor","justifyContent","Translation","alignItems","display","variant","translation","component","Button","leftIcon","size","onClick","OperativeComponent","flex","minHeight","borderRadius","textStyle","Text","TransactionList","assetIds","maxH","p","border","Card","props","children","layerStyle","rest","CardFlex","Dark","concat","Light","Outline","Flex","Heading","as","mb","MotionFlex","motion","transitionProps","stiffness","type","damping","mass","ChakraCarousel","gap","activeItem","defaultActiveItem","enableDragging","trackIsActive","setTrackIsActive","multiplier","setMultiplier","sliderWidth","setSliderWidth","setActiveItem","constraint","setConstraint","itemWidth","setItemWidth","initSliderWidth","useCallback","positions","useMemo","React","_","index","Math","abs","useEffect","length","sliderProps","trackProps","itemProps","Slider","Track","child","Item","key","useBoundingRect","ref","useLayoutEffect","round","w","base","md","ml","mt","overflow","_before","bgGradient","content","h","_after","right","dragStartPosition","setDragStartPosition","controls","useAnimation","x","useMotionValue","node","useRef","handleResize","start","handleClick","event","current","contains","target","handleKeyDown","preventDefault","prev","dragProps","drag","cursor","onDragStart","onDragEnd","info","distance","offset","velocity","extrapolatedPosition","min","max","closestPosition","reduce","curr","indexOf","_active","dragConstraints","animate","style","minWidth","flexWrap","userDidTab","setUserDidTab","onFocus","onBlur","onKeyUp","onKeyDown","_notLast","mr","Scrollable","parentRef","flexProps","overflowY","overflowX","direction","TransactionItem","transaction","AssetProvider","wrapFlex","pb","borderBottomWidth","action","formatDate","timeStamp","DATETIME_FORMAT","Amount","value","underlyingAmount","decimals","TransactionLink","hash","showTitleOnMobile","cardProps","account","useWalletProvider","dimensions","isPortfolioLoaded","isVaultsPositionsLoaded","selectVaultTransactions","selectVaultGauge","transactions","gaugeVault","vaultTransactions","gaugeTransactions","isLoaded","transactionsList","sortArrayByKey","map","minH","debounce","delay","callback","timeoutId","clearTimeout","args","setTimeout","initialDimensions","y","getDimensionObject","rect","getBoundingClientRect","setNode","setDimensions","window","measure","requestAnimationFrame","listener","addEventListener","removeEventListener"],"sourceRoot":""}