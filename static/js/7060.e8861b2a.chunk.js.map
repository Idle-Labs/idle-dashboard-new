{"version":3,"file":"static/js/7060.e8861b2a.chunk.js","mappings":"wVAgBaA,EAA2C,SAACC,GACvD,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CACEC,MAAO,OACPC,UAAW,SAFb,WAIE,UAAC,KAAD,CACEC,GAAI,EACJF,MAAO,OACPC,UAAW,MACXE,eAAgB,gBAJlB,WAME,UAAC,KAAD,CACEF,UAAW,MACXG,WAAY,SAFd,WAIE,SAAC,EAAAC,KAAD,CAAMC,cAAeP,EAAMQ,KAAMP,MAAO,GAAIQ,OAAQ,GAAIC,KAAM,MAC9D,SAAC,KAAD,CAAMC,GAAI,EAAGC,UAAW,YAAaC,WAAY,SAAUC,SAAU,SAAUC,aAAc,WAAYC,KAAM,IAA/G,SAAqHhB,EAAMiB,YAE7H,SAAC,KAAD,CAAMC,WAAY,IAAlB,SAAwBlB,EAAMmB,WAEhC,SAAC,KAAD,CAAMC,KAAM,GAAIN,SAAU,SAA1B,SACGd,EAAMqB,WAKhB,EAEYC,EAA6B,WACxC,IAAMC,GAAYC,EAAAA,EAAAA,MAClB,GAA4CC,EAAAA,EAAAA,UAA6B,IAAzE,eAAQC,EAAR,KAAuBC,EAAvB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACRD,EAAiB,GAoBlB,GAAE,KAGD,SAAC,KAAD,CAAME,QAAS,gBAAf,SACG,cAAGC,OAAH,OACC,iCACE,SAAC,KAAD,CAAYC,GAAIC,EAAAA,GAAYH,QAAS,MAAO,aAAY,gBAAiBrB,MAAM,SAAC,MAAD,CAA4BE,KAAM,QACjH,SAAC,KAAD,CAAUuB,OAAQ,QAAlB,UACE,SAAC,KAAD,CAAWhB,MAAOM,EAAU,8BAA5B,UACE,SAAC,EAAAW,WAAD,CAAYd,KAAM,IAAlB,SAEEM,GAAiBA,EAAcS,OAAST,EAAcU,KAAK,SAACC,EAAcC,GAAf,OACzD,SAACvC,GAAD,UAAgDsC,GAAhD,uBAAmCC,GADsB,KAGzD,SAAC,KAAD,CACEC,KAAM,IACNC,aAAc,EACdnC,WAAY,SACZD,eAAgB,SAChBqC,gBAAiB,yBALnB,SAOGlB,EAAU,wCAjBxB,GA4BN,C,6JChGYW,EAAuC,SAAC,GAAwC,EAAvCQ,UAAwC,IAA7BC,EAA4B,EAA5BA,SAAaC,GAAe,YAC3F,OACE,SAAC,MAAD,gBACEC,KAAM,EACN5C,MAAO,OACP6C,UAAW,OACXC,UAAW,SACX7C,UAAW,SACXG,WAAY,cACRuC,GAPN,aASGD,IAGN,C","sources":["components/Header/NotificationList.tsx","components/Scrollable/Scrollable.tsx"],"sourcesContent":["import { IconType } from 'constants/types'\nimport { Icon } from 'components/Icon/Icon'\nimport { useTranslate } from 'react-polyglot'\nimport React, { useState, useEffect } from 'react'\nimport { MdOutlineNotificationsNone } from 'react-icons/md'\nimport { Scrollable } from 'components/Scrollable/Scrollable'\n// import { usePortfolioProvider } from 'contexts/PortfolioProvider'\nimport { Menu, MenuGroup, MenuButton, MenuList, MenuItem, IconButton, Text, Flex } from '@chakra-ui/react'\n\ntype NotificationType = {\n  title: string\n  text: string\n  date: string\n  icon: IconType\n}\n\nexport const Notification: React.FC<NotificationType> = (props) => {\n  return (\n    <MenuItem>\n      <Flex\n        width={'100%'}\n        direction={'column'}\n      >\n        <Flex\n          mb={2}\n          width={'100%'}\n          direction={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            direction={'row'}\n            alignItems={'center'}\n          >\n            <Icon IconComponent={props.icon} width={24} height={24} size={24} />\n            <Text ml={3} textStyle={'bodyTitle'} whiteSpace={'nowrap'} overflow={'hidden'} textOverflow={'ellipsis'} maxW={200}>{props.title}</Text>\n          </Flex>\n          <Text fontWeight={600}>{props.date}</Text>\n        </Flex>\n        <Text maxH={45} overflow={'hidden'}>\n          {props.text}\n        </Text>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nexport const NotificationList: React.FC = () => {\n  const translate = useTranslate()\n  const [ notifications, setNotifications ] = useState<NotificationType[]>([])\n\n  useEffect(() => {\n    setNotifications([\n      // {\n      //   icon:MdWbSunny,\n      //   date:'05/10/2022',\n      //   title:'Notifica di prova, Notifica di prova, Notifica di prova',\n      //   text:'Testo di prova per la notifica, Testo di prova per la notifica, Testo di prova per la notifica, Testo di prova per la notifica, Testo di prova per la notifica'\n      // },\n      // {\n      //   icon:MdWbSunny,\n      //   date:'05/10/2022',\n      //   title:'Notifica di prova',\n      //   text:'Testo di prova per la notifica, Testo di prova per la notifica, Testo di prova per la notifica, Testo di prova per la notifica, Testo di prova per la notifica'\n      // },\n      // {\n      //   icon:MdWbSunny,\n      //   date:'05/10/2022',\n      //   title:'Notifica di prova',\n      //   text:'Testo di prova per la notifica, Testo di prova per la notifica, Testo di prova per la notifica, Testo di prova per la notifica, Testo di prova per la notifica'\n      // }\n    ])\n  }, [])\n\n  return (\n    <Menu variant={'notifications'}>\n      {({ isOpen }) => (\n        <>\n          <MenuButton as={IconButton} variant={'cta'} aria-label={'Notifications'} icon={<MdOutlineNotificationsNone size={24} />} />\n          <MenuList zIndex={9999999}>\n            <MenuGroup title={translate('navBar.notifications.title')}>\n              <Scrollable maxH={240}>\n              {\n                notifications && notifications.length ? notifications.map( (notification, index) => (\n                  <Notification key={`notification_${index}`} {...notification}></Notification>\n                )) : (\n                  <MenuItem\n                    minH={240}\n                    borderBottom={0}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    backgroundColor={'transparent !important'}\n                  >\n                    {translate('navBar.notifications.empty')}\n                  </MenuItem>\n                )\n              }\n              </Scrollable>\n            </MenuGroup>\n          </MenuList>\n        </>\n      )}\n    </Menu>\n  )\n}","import React from 'react'\nimport { FlexProps, Flex } from '@chakra-ui/react'\n\ntype ScrollableArgs = {\n  parentRef?: any\n} & FlexProps\n\nexport const Scrollable: React.FC<ScrollableArgs> = ({parentRef, children, ...flexProps}) => {\n  return (\n    <Flex\n      flex={1}\n      width={'100%'}\n      overflowY={'auto'}\n      overflowX={'hidden'}\n      direction={'column'}\n      alignItems={'flex-start'}\n      {...flexProps}\n    >\n      {children}\n    </Flex>\n  )\n}"],"names":["Notification","props","width","direction","mb","justifyContent","alignItems","Icon","IconComponent","icon","height","size","ml","textStyle","whiteSpace","overflow","textOverflow","maxW","title","fontWeight","date","maxH","text","NotificationList","translate","useTranslate","useState","notifications","setNotifications","useEffect","variant","isOpen","as","IconButton","zIndex","Scrollable","length","map","notification","index","minH","borderBottom","backgroundColor","parentRef","children","flexProps","flex","overflowY","overflowX"],"sourceRoot":""}