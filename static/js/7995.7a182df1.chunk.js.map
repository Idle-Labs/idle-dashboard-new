{"version":3,"file":"static/js/7995.7a182df1.chunk.js","mappings":"scAWaA,EAAO,SAACC,GACnB,IAAQC,EAAkCD,EAAlCC,SAAUC,EAAwBF,EAAxBE,WAAeC,GAAjC,OAA0CH,EAA1C,GACA,OACE,SAAC,MAAD,gBACEI,MAAO,OACPC,SAAU,WACVH,WAAYA,GAAc,QACtBC,GAJN,aAMGF,IAGN,EAEYK,EAAW,SAACN,GACvB,IAAQC,EAAkCD,EAAlCC,SAAUC,EAAwBF,EAAxBE,WAAeC,GAAjC,OAA0CH,EAA1C,GACA,OACE,SAAC,MAAD,gBACEI,MAAO,OACPF,WAAYA,GAAc,QACtBC,GAHN,aAKGF,IAGN,EAEYM,EAAO,SAACP,GACnB,IAAQC,EAAsBD,EAAtBC,SAAaE,GAArB,OAA8BH,EAA9B,GACME,EAAuB,CAAC,YAAYM,OAAOR,EAAME,YACvD,OACE,SAACH,GAAD,kBAAUI,GAAV,IAAgBD,WAAYA,EAA5B,SAAyCD,IAE5C,EAEYQ,EAAQ,SAACT,GACpB,IAAQC,EAAsBD,EAAtBC,SAAaE,GAArB,OAA8BH,EAA9B,GACME,EAAuB,CAAC,aAAaM,OAAOR,EAAME,YACxD,OACE,SAACH,GAAD,kBAAUI,GAAV,IAAgBD,WAAYA,EAA5B,SAAyCD,IAE5C,EAEYS,EAAU,SAACV,GACtB,IAAQC,EAAsBD,EAAtBC,SAAaE,GAArB,OAA8BH,EAA9B,GACME,EAAuB,CAAC,eAAeM,OAAOR,EAAME,YAC1D,OACE,SAACH,GAAD,kBAAUI,GAAV,IAAgBD,WAAYA,EAA5B,SAAyCD,IAE5C,EAEDF,EAAKQ,KAAOA,EACZR,EAAKU,MAAQA,EACbV,EAAKY,KAAOL,EACZP,EAAKW,QAAUA,EACfX,EAAKa,QA9DgB,SAACZ,GACpB,IAAQC,EAAsBD,EAAtBC,SAAaE,GAArB,OAA8BH,EAA9B,GACA,OACE,SAAC,MAAD,gBAASa,GAAI,KAAMC,KAAM,KAAMC,GAAI,GAAOZ,GAA1C,aAAiDF,IAEpD,C,6JCFYe,EAAuC,SAAC,GAAwC,EAAvCC,UAAwC,IAA7BhB,EAA4B,EAA5BA,SAAaiB,GAAe,YAC3F,OACE,SAAC,MAAD,gBACEC,KAAM,EACNf,MAAO,OACPgB,UAAW,OACXC,UAAW,SACXC,UAAW,SACXC,WAAY,cACRL,GAPN,aASGjB,IAGN,C,uVCDKuB,EAAiD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACxD,OACE,SAAC,EAAAC,cAAD,CACEC,UAAU,EACVC,QAASH,EAAYG,QAFvB,UAIE,UAAC,KAAD,CACEb,GAAI,EACJc,GAAI,EACJC,QAAS,EACT1B,MAAO,OACPmB,WAAY,aACZQ,kBAAmB,MACnBC,kBAAmB,UAPrB,WASE,UAAC,KAAD,CACE5B,MAAO,OACP6B,eAAgB,gBAFlB,WAIE,SAAC,KAAD,CACEH,QAAS,EACTR,UAAW,MACXC,WAAY,SAHd,UAME,SAAC,EAAAW,YAAD,CAAaC,UAAWC,EAAAA,GAAMC,YAAW,yBAAoBZ,EAAYa,QAAUC,UAAW,oBAEhG,SAAC,KAAD,CAAMA,UAAW,eAAjB,UAAkCC,EAAAA,EAAAA,IAAkC,KAAtBf,EAAYgB,UAAgBC,EAAAA,UAE5E,UAAC,KAAD,CACEtC,MAAO,OACP6B,eAAgB,gBAFlB,WAIE,UAAC,KAAD,CACEH,QAAS,EACTP,WAAY,SAFd,WAIE,SAAC,EAAAG,cAAA,KAAD,CAAoBZ,KAAM,QAC1B,UAAC,KAAD,CACEgB,QAAS,EACTP,WAAY,SAFd,WAIE,SAAC,EAAAoB,OAAD,CAAQC,MAAOnB,EAAYoB,iBAAkBC,SAAU,EAAGP,UAAW,eACrE,SAAC,EAAAb,cAAA,KAAD,CAAoBa,UAAW,qBAGnC,SAAC,EAAAQ,gBAAD,CAAiBC,KAAMvB,EAAYuB,cAK5C,EAQYC,EAAiD,SAAC,GAAuF,IAArFC,EAAoF,EAApFA,SAAoF,IAA1EC,kBAAAA,OAA0E,aAA/CC,mBAAAA,OAA+C,SAAhBC,GAAgB,YAC3IC,GAAYC,EAAAA,EAAAA,KAAZD,QACR,GAA4BE,EAAAA,EAAAA,KAA5B,eAAQC,EAAR,KAAaC,EAAb,KACA,GAAiHC,EAAAA,EAAAA,KAAzGC,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,wBAA3B,IAAoDC,UAAaC,EAAjE,EAAiEA,wBAAyBC,EAA1F,EAA0FA,iBAEpFC,GAA8BC,EAAAA,EAAAA,UAAQ,WAC1C,OAAKZ,GAAYJ,GAAaa,GAA4BC,EAEnDd,EAASiB,QAAQ,SAACF,EAA6BrC,GACpD,IAAMwC,EAAaJ,EAAiBpC,GAC9ByC,EAAmCN,EAAwBnC,GAC3D0C,EAAmCF,EAAaL,EAAwBK,EAAWG,IAAM,GAC/F,MAAM,GAAN,eACKN,IADL,OAEKI,IAFL,OAGKC,GAEN,GAAE,IAXgF,EAapF,GAAE,CAAChB,EAASJ,EAAUa,EAAyBC,IAE1CQ,GAAWN,EAAAA,EAAAA,UAAQ,WACvB,OAAON,KAAuBN,GAAWO,EAC1C,GAAE,CAACD,EAAmBN,EAASO,IAE1BY,GAAmBP,EAAAA,EAAAA,UAAQ,WAC/B,OAAOM,EACLP,EAAaS,OAAO,GAClBC,EAAAA,EAAAA,IAAeV,EAAc,YAAa,QAAQW,KAAK,SAACnD,GAAD,OACrD,SAACD,EAAD,CAAgDC,YAAaA,GAA7D,aAA4BA,EAAYuB,MADa,KAIvD,SAAC,KAAD,CACE7B,KAAM,EACN0D,KAAM,IACNzE,MAAO,OACPmB,WAAY,SACZU,eAAgB,SALlB,UAOE,SAAC,EAAAC,YAAD,CAAaC,UAAWC,EAAAA,GAAMC,YAAa,0DAI/C,UAAC,KAAD,CACEP,QAAS,EACT1B,MAAO,OAFT,WAIE,SAAC,KAAD,CAAUA,MAAO,OAAQ0E,OAAQ,MACjC,SAAC,KAAD,CAAU1E,MAAO,OAAQ0E,OAAQ,MACjC,SAAC,KAAD,CAAU1E,MAAO,OAAQ0E,OAAQ,MACjC,SAAC,KAAD,CAAU1E,MAAO,OAAQ0E,OAAQ,OAGtC,GAAE,CAACN,EAAUP,IAEd,OACE,SAAC,EAAAlE,MAAD,gBACEoB,KAAM,GACFkC,GAFN,cAIE,UAAC,KAAD,CACElC,KAAM,EACNW,QAAS,EACTgD,OAAQ,OACRvD,WAAY,aACZkC,IAAKA,EACLxB,eAAgB,aANlB,WAQE,SAAC,EAAAC,YAAD,CAAa6C,QAAS5B,EAAoB,QAAU,CAAC,OAAQ,SAAUhB,UAAWpC,EAAAA,KAAAA,QAAcsC,YAAa,yDAC7G,SAAC,EAAArB,WAAD,CAAYgE,KAAM,CAAC5B,EAAqB,OAAS,IAAK6B,KAAKC,KAAc,OAAVxB,QAAU,IAAVA,OAAA,EAAAA,EAAYoB,SAAU,MAArF,SACGL,SAKV,C,wGCrJKU,EAAW,WAA4C,IAA3CC,EAA0C,uDAA1B,EAAGC,EAAuB,uCACtDC,EAAiB,KACrB,OAAO,WACDA,GACFC,aAAaD,GAFU,2BAAhBE,EAAgB,yBAAhBA,EAAgB,gBAIzBF,EAAYG,WAAWJ,EAAUD,EAAOI,EAMzC,CACF,EAaKE,EAAgC,CACpCC,EAAG,EACHC,EAAG,EACHC,IAAK,EACLC,KAAM,EACN1F,MAAO,EACP0E,OAAQ,EACRiB,MAAO,EACPC,OAAQ,GAGV,SAASC,EAAmBC,GAC1B,IAAMC,EAAOD,EAAKE,wBAClB,MAAO,CACLT,EAAGQ,EAAKR,EACRC,EAAGO,EAAKP,EACRC,IAAKM,EAAKN,IACVC,KAAMK,EAAKL,KACX1F,MAAO+F,EAAK/F,MACZ0E,OAAQqB,EAAKrB,OACbiB,MAAOI,EAAKJ,MACZC,OAAQG,EAAKH,OAEhB,CAEc,SAASxC,IAAoC,IAApB4B,EAAmB,uDAAH,EACtD,GAAwBiB,EAAAA,EAAAA,UAAc,MAAtC,eAAOH,EAAP,KAAaI,EAAb,KACA,GAAoCD,EAAAA,EAAAA,UAAqBX,GAAzD,eAAOhC,EAAP,KAAmB6C,EAAnB,KAEM9C,GAAM+C,EAAAA,EAAAA,cAAY,SAACN,GACvBI,EAAQJ,EACT,GAAE,IAyBH,OAvBAO,EAAAA,EAAAA,kBAAgB,WACd,GAAI,qBAAuBC,QAAUR,EAAM,CACzC,IAAMS,EAAO,yCAAG,mFACdD,OAAOE,uBAAsB,WAE3BL,EAAcN,EAAmBC,GAClC,IAJa,2CAAH,qDAObS,IAEA,IAAME,EAAW1B,EAASC,GAAS,IAAKuB,GAKxC,OAHAD,OAAOI,iBAAiB,SAAUD,GAClCH,OAAOI,iBAAiB,SAAUD,GAE3B,WACLH,OAAOK,oBAAoB,SAAUF,GACrCH,OAAOK,oBAAoB,SAAUF,EACtC,CACF,CACF,GAAE,CAACX,EAAMd,IAEH,CAAC3B,EAAKC,EAAYwC,EAC1B,C","sources":["components/Card/Card.tsx","components/Scrollable/Scrollable.tsx","components/TransactionList/TransactionList.tsx","hooks/useBoundingRect/useBoundingRect.ts"],"sourcesContent":["import { Heading, Flex, Box, FlexProps, BoxProps, ThemingProps } from '@chakra-ui/react'\n\nexport type CardProps = BoxProps & ThemingProps \n\nconst HeadingTitle = (props: CardProps) => {\n  const { children, ...rest } = props\n  return (\n    <Heading as={'h3'} size={'md'} mb={6} {...rest}>{children}</Heading>\n  )\n}\n\nexport const Card = (props: CardProps) => {\n  const { children, layerStyle, ...rest } = props\n  return (\n    <Box\n      width={'100%'}\n      position={'relative'}\n      layerStyle={layerStyle || 'card'}\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport const CardFlex = (props: CardProps & FlexProps) => {\n  const { children, layerStyle, ...rest } = props\n  return (\n    <Flex\n      width={'100%'}\n      layerStyle={layerStyle || 'card'}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport const Dark = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardDark'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nexport const Light = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardLight'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nexport const Outline = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardOutline'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nCard.Dark = Dark\nCard.Light = Light\nCard.Flex = CardFlex\nCard.Outline = Outline\nCard.Heading = HeadingTitle","import React from 'react'\nimport { FlexProps, Flex } from '@chakra-ui/react'\n\ntype ScrollableArgs = {\n  parentRef?: any\n} & FlexProps\n\nexport const Scrollable: React.FC<ScrollableArgs> = ({parentRef, children, ...flexProps}) => {\n  return (\n    <Flex\n      flex={1}\n      width={'100%'}\n      overflowY={'auto'}\n      overflowX={'hidden'}\n      direction={'column'}\n      alignItems={'flex-start'}\n      {...flexProps}\n    >\n      {children}\n    </Flex>\n  )\n}","import { Icon } from 'components/Icon/Icon'\nimport React, { useMemo, useRef } from 'react'\nimport { DATETIME_FORMAT } from 'constants/vars'\nimport { Amount } from 'components/Amount/Amount'\nimport { formatDate, sortArrayByKey } from 'helpers/'\nimport { Card, CardProps } from 'components/Card/Card'\nimport { useWalletProvider } from 'contexts/WalletProvider'\nimport type { AssetId, Transaction } from 'constants/types'\nimport { Scrollable } from 'components/Scrollable/Scrollable'\nimport { Translation } from 'components/Translation/Translation'\nimport { usePortfolioProvider } from 'contexts/PortfolioProvider'\nimport useBoundingRect from \"hooks/useBoundingRect/useBoundingRect\"\nimport { AssetProvider } from 'components/AssetProvider/AssetProvider'\nimport { VStack, HStack, Flex, Text, Skeleton } from '@chakra-ui/react'\nimport { TransactionLink } from 'components/TransactionLink/TransactionLink'\n\ntype TransactionItemArgs = {\n  transaction: Transaction\n}\n\nconst TransactionItem: React.FC<TransactionItemArgs> = ({ transaction }) => {\n  return (\n    <AssetProvider\n      wrapFlex={false}\n      assetId={transaction.assetId}\n    >\n      <VStack\n        mb={2}\n        pb={4}\n        spacing={4}\n        width={'100%'}\n        alignItems={'flex-start'}\n        borderBottomWidth={'1px'}\n        borderBottomColor={'divider'}\n      >\n        <HStack\n          width={'100%'}\n          justifyContent={'space-between'}\n        >\n          <HStack\n            spacing={3}\n            direction={'row'}\n            alignItems={'center'}\n          >\n            {/*<Icon IconComponent={transaction.icon} width={24} height={24} size={24} />*/}\n            <Translation component={Text} translation={`transactionRow.${transaction.action}`} textStyle={'captionSmall'} />\n          </HStack>\n          <Text textStyle={'captionSmall'}>{formatDate(+transaction.timeStamp*1000, DATETIME_FORMAT)}</Text>\n        </HStack>\n        <HStack\n          width={'100%'}\n          justifyContent={'space-between'}\n        >\n          <HStack\n            spacing={2}\n            alignItems={'center'}\n          >\n            <AssetProvider.Icon size={'xs'} />\n            <HStack\n              spacing={1}\n              alignItems={'center'}\n            >\n              <Amount value={transaction.underlyingAmount} decimals={4} textStyle={'tableCell'} />\n              <AssetProvider.Name textStyle={'tableCell'} />\n            </HStack>\n          </HStack>\n          <TransactionLink hash={transaction.hash} />\n        </HStack>\n      </VStack>\n    </AssetProvider>\n  )\n}\n\ntype TransactionListArgs = {\n  assetIds?: AssetId[]\n  showTitleOnMobile?: boolean\n  fullHeightOnMobile?: boolean\n} & CardProps\n\nexport const TransactionList: React.FC<TransactionListArgs> = ({ assetIds, showTitleOnMobile = false, fullHeightOnMobile = false, ...cardProps }) => {\n  const { account } = useWalletProvider()\n  const [ ref, dimensions ] = useBoundingRect()\n  const { isPortfolioLoaded, isVaultsPositionsLoaded, selectors: { selectVaultTransactions, selectVaultGauge } } = usePortfolioProvider()\n\n  const transactions: Transaction[] = useMemo(() => {\n    if (!account || !assetIds || !selectVaultTransactions || !selectVaultGauge) return []\n\n    return assetIds.reduce( (transactions: Transaction[], assetId: AssetId) => {\n      const gaugeVault = selectVaultGauge(assetId)\n      const vaultTransactions: Transaction[] = selectVaultTransactions(assetId)\n      const gaugeTransactions: Transaction[] = gaugeVault ? selectVaultTransactions(gaugeVault.id) : []\n      return [\n        ...transactions,\n        ...vaultTransactions,\n        ...gaugeTransactions\n      ]\n    }, [])\n\n  }, [account, assetIds, selectVaultTransactions, selectVaultGauge])\n\n  const isLoaded = useMemo(() => {\n    return isPortfolioLoaded && (!account || isVaultsPositionsLoaded)\n  }, [isPortfolioLoaded, account, isVaultsPositionsLoaded])\n\n  const transactionsList = useMemo(() => {\n    return isLoaded ?\n      transactions.length>0 ? \n        sortArrayByKey(transactions, 'timeStamp', 'desc').map( (transaction: Transaction) => (\n          <TransactionItem key={`tx_${transaction.hash}`} transaction={transaction} />\n        ))\n      : (\n        <Flex\n          flex={1}\n          minH={250}\n          width={'100%'}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Translation component={Text} translation={'assets.assetDetails.assetHistory.emptyTransactions'} />\n        </Flex>\n      )\n    : (\n      <VStack\n        spacing={4}\n        width={'100%'}\n      >\n        <Skeleton width={'100%'} height={10} />\n        <Skeleton width={'100%'} height={10} />\n        <Skeleton width={'100%'} height={10} />\n        <Skeleton width={'100%'} height={10} />\n      </VStack>\n    )\n  }, [isLoaded, transactions])\n\n  return (\n    <Card\n      flex={1}\n      {...cardProps}\n    >\n      <VStack\n        flex={1}\n        spacing={0}\n        height={'100%'}\n        alignItems={'flex-start'}\n        ref={ref as typeof useRef}\n        justifyContent={'flex-start'}\n      >\n        <Translation display={showTitleOnMobile ? 'block' : ['none', 'block']} component={Card.Heading} translation={'assets.assetDetails.assetHistory.transactionHistory'} />\n        <Scrollable maxH={[fullHeightOnMobile ? '100%' : 280, Math.max(dimensions?.height || 400)]}>\n          {transactionsList}\n        </Scrollable>\n      </VStack>\n    </Card>\n  )\n}","import { requestTimeout } from 'helpers/'\nimport { useState, useCallback, useLayoutEffect } from \"react\";\n\n// let timeoutRequest: any = null;\n\nconst debounce = (delay: number = 0, callback: Function) => {\n  let timeoutId: any = null;\n  return (...args: any[]) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(callback, delay, args);\n\n    // if (timeoutRequest) {\n    //   timeoutRequest.clear();\n    // }\n    // timeoutRequest = requestTimeout(callback, delay);\n  };\n};\n\nexport type Dimensions = {\n  x: number\n  y: number\n  top: number\n  left: number\n  width: number\n  height: number\n  right: number\n  bottom: number\n}\n\nconst initialDimensions: Dimensions = {\n  x: 0,\n  y: 0,\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0,\n  right: 0,\n  bottom: 0\n}\n\nfunction getDimensionObject(node: any): Dimensions {\n  const rect = node.getBoundingClientRect();\n  return {\n    x: rect.x,\n    y: rect.y,\n    top: rect.top,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    right: rect.right,\n    bottom: rect.bottom\n  };\n}\n\nexport default function useBoundingRect(delay: number = 0) {\n  const [node, setNode] = useState<any>(null);\n  const [dimensions, setDimensions] = useState<Dimensions>(initialDimensions);\n\n  const ref = useCallback((node: any) => {\n    setNode(node);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (\"undefined\" !== typeof window && node) {\n      const measure = async () => {\n        window.requestAnimationFrame(() => {\n          // console.log('measure', getDimensionObject(node))\n          setDimensions(getDimensionObject(node))\n        });\n      }\n\n      measure();\n\n      const listener = debounce(delay || 100, measure);\n\n      window.addEventListener(\"resize\", listener);\n      window.addEventListener(\"scroll\", listener);\n      \n      return () => {\n        window.removeEventListener(\"resize\", listener);\n        window.removeEventListener(\"scroll\", listener);\n      };\n    }\n  }, [node, delay]);\n\n  return [ref, dimensions, node];\n}\n"],"names":["Card","props","children","layerStyle","rest","width","position","CardFlex","Dark","concat","Light","Outline","Flex","Heading","as","size","mb","Scrollable","parentRef","flexProps","flex","overflowY","overflowX","direction","alignItems","TransactionItem","transaction","AssetProvider","wrapFlex","assetId","pb","spacing","borderBottomWidth","borderBottomColor","justifyContent","Translation","component","Text","translation","action","textStyle","formatDate","timeStamp","DATETIME_FORMAT","Amount","value","underlyingAmount","decimals","TransactionLink","hash","TransactionList","assetIds","showTitleOnMobile","fullHeightOnMobile","cardProps","account","useWalletProvider","useBoundingRect","ref","dimensions","usePortfolioProvider","isPortfolioLoaded","isVaultsPositionsLoaded","selectors","selectVaultTransactions","selectVaultGauge","transactions","useMemo","reduce","gaugeVault","vaultTransactions","gaugeTransactions","id","isLoaded","transactionsList","length","sortArrayByKey","map","minH","height","display","maxH","Math","max","debounce","delay","callback","timeoutId","clearTimeout","args","setTimeout","initialDimensions","x","y","top","left","right","bottom","getDimensionObject","node","rect","getBoundingClientRect","useState","setNode","setDimensions","useCallback","useLayoutEffect","window","measure","requestAnimationFrame","listener","addEventListener","removeEventListener"],"sourceRoot":""}