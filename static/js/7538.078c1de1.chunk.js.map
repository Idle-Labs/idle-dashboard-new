{"version":3,"file":"static/js/7538.078c1de1.chunk.js","mappings":"scAWaA,EAAO,SAACC,GACnB,IAAQC,EAAkCD,EAAlCC,SAAUC,EAAwBF,EAAxBE,WAAeC,GAAjC,OAA0CH,EAA1C,GACA,OACE,SAAC,MAAD,gBACEI,MAAO,OACPC,SAAU,WACVH,WAAYA,GAAc,QACtBC,GAJN,aAMGF,IAGN,EAEYK,EAAW,SAACN,GACvB,IAAQC,EAAkCD,EAAlCC,SAAUC,EAAwBF,EAAxBE,WAAeC,GAAjC,OAA0CH,EAA1C,GACA,OACE,SAAC,MAAD,gBACEI,MAAO,OACPF,WAAYA,GAAc,QACtBC,GAHN,aAKGF,IAGN,EAEYM,EAAO,SAACP,GACnB,IAAQC,EAAsBD,EAAtBC,SAAaE,GAArB,OAA8BH,EAA9B,GACME,EAAuB,CAAC,YAAYM,OAAOR,EAAME,YACvD,OACE,SAACH,GAAD,kBAAUI,GAAV,IAAgBD,WAAYA,EAA5B,SAAyCD,IAE5C,EAEYQ,EAAQ,SAACT,GACpB,IAAQC,EAAsBD,EAAtBC,SAAaE,GAArB,OAA8BH,EAA9B,GACME,EAAuB,CAAC,aAAaM,OAAOR,EAAME,YACxD,OACE,SAACH,GAAD,kBAAUI,GAAV,IAAgBD,WAAYA,EAA5B,SAAyCD,IAE5C,EAEYS,EAAU,SAACV,GACtB,IAAQC,EAAsBD,EAAtBC,SAAaE,GAArB,OAA8BH,EAA9B,GACME,EAAuB,CAAC,eAAeM,OAAOR,EAAME,YAC1D,OACE,SAACH,GAAD,kBAAUI,GAAV,IAAgBD,WAAYA,EAA5B,SAAyCD,IAE5C,EAEDF,EAAKQ,KAAOA,EACZR,EAAKU,MAAQA,EACbV,EAAKY,KAAOL,EACZP,EAAKW,QAAUA,EACfX,EAAKa,QA9DgB,SAACZ,GACpB,IAAQC,EAAsBD,EAAtBC,SAAaE,GAArB,OAA8BH,EAA9B,GACA,OACE,SAAC,MAAD,gBAASa,GAAI,KAAMC,KAAM,KAAMC,GAAI,GAAOZ,GAA1C,aAAiDF,IAEpD,C,gJCFYe,EAA2B,WACtC,OACE,SAAC,EAAAjB,KAAD,CACEkB,KAAM,EADR,UAGE,UAAC,KAAD,CACEA,KAAM,EACNC,QAAS,EACTC,OAAQ,OACRC,WAAY,aACZC,eAAgB,aALlB,WAOE,SAAC,EAAAC,YAAD,CAAaC,UAAWxB,EAAAA,KAAAA,QAAcyB,YAAa,oCACnD,SAAC,EAAAC,WAAD,CAAYC,KAAM,IAAlB,UACE,SAAC,KAAD,CACET,KAAM,EACNU,KAAM,IACNvB,MAAO,OACPgB,WAAY,SACZC,eAAgB,SALlB,UAOE,SAAC,EAAAC,YAAD,CAAaC,UAAWK,EAAAA,GAAMJ,YAAa,2CAMtD,C,6JC3BYC,EAAuC,SAAC,GAAwC,EAAvCI,UAAwC,IAA7B5B,EAA4B,EAA5BA,SAAa6B,GAAe,YAC3F,OACE,SAAC,MAAD,gBACEb,KAAM,EACNb,MAAO,OACP2B,UAAW,OACXC,UAAW,SACXC,UAAW,SACXb,WAAY,cACRU,GAPN,aASG7B,IAGN,C","sources":["components/Card/Card.tsx","components/ProductUpdates/ProductUpdates.tsx","components/Scrollable/Scrollable.tsx"],"sourcesContent":["import { Heading, Flex, Box, FlexProps, BoxProps, ThemingProps } from '@chakra-ui/react'\n\nexport type CardProps = BoxProps & ThemingProps \n\nconst HeadingTitle = (props: CardProps) => {\n  const { children, ...rest } = props\n  return (\n    <Heading as={'h3'} size={'md'} mb={6} {...rest}>{children}</Heading>\n  )\n}\n\nexport const Card = (props: CardProps) => {\n  const { children, layerStyle, ...rest } = props\n  return (\n    <Box\n      width={'100%'}\n      position={'relative'}\n      layerStyle={layerStyle || 'card'}\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport const CardFlex = (props: CardProps & FlexProps) => {\n  const { children, layerStyle, ...rest } = props\n  return (\n    <Flex\n      width={'100%'}\n      layerStyle={layerStyle || 'card'}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport const Dark = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardDark'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nexport const Light = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardLight'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nexport const Outline = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardOutline'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nCard.Dark = Dark\nCard.Light = Light\nCard.Flex = CardFlex\nCard.Outline = Outline\nCard.Heading = HeadingTitle","import React from 'react'\nimport { Card } from 'components/Card/Card'\nimport { ProductUpdate } from './ProductUpdate'\nimport { Flex, VStack, Text } from '@chakra-ui/react'\nimport { Scrollable } from 'components/Scrollable/Scrollable'\nimport { Translation } from 'components/Translation/Translation'\n\nexport const ProductUpdates: React.FC = () => {\n  return (\n    <Card\n      flex={1}\n    >\n      <VStack\n        flex={1}\n        spacing={0}\n        height={'100%'}\n        alignItems={'flex-start'}\n        justifyContent={'flex-start'}\n      >\n        <Translation component={Card.Heading} translation={'dashboard.productUpdates.title'} />\n        <Scrollable maxH={550}>\n          <Flex\n            flex={1}\n            minH={400}\n            width={'100%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Translation component={Text} translation={'dashboard.productUpdates.empty'} />\n          </Flex>\n        </Scrollable>\n      </VStack>\n    </Card>\n  )\n}","import React from 'react'\nimport { FlexProps, Flex } from '@chakra-ui/react'\n\ntype ScrollableArgs = {\n  parentRef?: any\n} & FlexProps\n\nexport const Scrollable: React.FC<ScrollableArgs> = ({parentRef, children, ...flexProps}) => {\n  return (\n    <Flex\n      flex={1}\n      width={'100%'}\n      overflowY={'auto'}\n      overflowX={'hidden'}\n      direction={'column'}\n      alignItems={'flex-start'}\n      {...flexProps}\n    >\n      {children}\n    </Flex>\n  )\n}"],"names":["Card","props","children","layerStyle","rest","width","position","CardFlex","Dark","concat","Light","Outline","Flex","Heading","as","size","mb","ProductUpdates","flex","spacing","height","alignItems","justifyContent","Translation","component","translation","Scrollable","maxH","minH","Text","parentRef","flexProps","overflowY","overflowX","direction"],"sourceRoot":""}