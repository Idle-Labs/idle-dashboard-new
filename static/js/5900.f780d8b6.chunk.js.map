{"version":3,"file":"static/js/5900.f780d8b6.chunk.js","mappings":"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","sources":["../../../../src/communication/index.ts","../../../../src/communication/messageFormatter.ts","../../../../src/communication/methods.ts","../../../../src/communication/utils.ts","../../../../src/eth/constants.ts","../../../../src/eth/index.ts","../../../src/index.ts","../../../../src/safe/index.ts","../../../../src/safe/signatures.ts","../../../src/sdk.ts","../../../../src/txs/index.ts","../../../../src/types/gateway.ts","../../../../src/types/index.ts","../../../../src/types/messaging.ts","../../../src/utils.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/contracts/src.ts/index.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/contracts/src.ts/_version.ts","../node_modules/@ethersproject/bignumber/src.ts/fixednumber.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/wallet/src.ts/index.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/wallet/src.ts/_version.ts","../node_modules/@ethersproject/constants/src.ts/strings.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/solidity/src.ts/index.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/solidity/src.ts/_version.ts","../node_modules/@ethersproject/strings/src.ts/idna.ts","../node_modules/@ethersproject/strings/src.ts/bytes32.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/units/src.ts/_version.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/units/src.ts/index.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/web/src.ts/_version.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/web/src.ts/browser-geturl.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/@ethersproject/web/src.ts/index.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/ethers/src.ts/_version.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/ethers/src.ts/ethers.ts","../node_modules/@gnosis.pm/safe-apps-sdk/node_modules/ethers/src.ts/index.ts","../\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/universalModuleDefinition","../\"@gnosis.pm/safe-react-gateway-sdk\"/node_modules/cross-fetch/dist/browser-ponyfill.js","../\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/bootstrap","../\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/runtime/compat get default export","../\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/runtime/define property getters","../\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/runtime/hasOwnProperty shorthand","../\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/runtime/make namespace object","../\"@gnosis.pm/safe-react-gateway-sdk\"/src/types/safe-apps.ts","../\"@gnosis.pm/safe-react-gateway-sdk\"/src/types/transactions.ts","../\"@gnosis.pm/safe-react-gateway-sdk\"/src/types/chains.ts","../\"@gnosis.pm/safe-react-gateway-sdk\"/src/types/common.ts","../\"@gnosis.pm/safe-react-gateway-sdk\"/src/utils.ts","../\"@gnosis.pm/safe-react-gateway-sdk\"/src/endpoint.ts","../\"@gnosis.pm/safe-react-gateway-sdk\"/src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\"use strict\";\n\nimport { checkResultErrors, EventFragment, Fragment, FunctionFragment, Indexed, Interface, JsonFragment, LogDescription, ParamType, Result } from \"@ethersproject/abi\";\nimport { Block, BlockTag, Filter, FilterByBlockHash, Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, AccessListish } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\nexport interface Overrides {\n    gasLimit?: BigNumberish | Promise<BigNumberish>;\n    gasPrice?: BigNumberish | Promise<BigNumberish>;\n    maxFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    maxPriorityFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    nonce?: BigNumberish | Promise<BigNumberish>;\n    type?: number;\n    accessList?: AccessListish;\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport interface PayableOverrides extends Overrides {\n    value?: BigNumberish | Promise<BigNumberish>;\n}\n\nexport interface CallOverrides extends PayableOverrides {\n    blockTag?: BlockTag | Promise<BlockTag>;\n    from?: string | Promise<string>;\n}\n\n// @TODO: Better hierarchy with: (in v6)\n//  - abstract-provider:TransactionRequest\n//  - transactions:Transaction\n//  - transaction:UnsignedTransaction\n\nexport interface PopulatedTransaction {\n    to?: string;\n    from?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumber;\n    gasPrice?: BigNumber;\n\n    data?: string;\n    value?: BigNumber;\n    chainId?: number;\n\n    type?: number;\n    accessList?: AccessList;\n\n    maxFeePerGas?: BigNumber;\n    maxPriorityFeePerGas?: BigNumber;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport type EventFilter = {\n    address?: string;\n    topics?: Array<string|Array<string>>;\n};\n\n\nexport type ContractFunction<T = any> = (...args: Array<any>) => Promise<T>;\n\n\n// The (n + 1)th parameter passed to contract event callbacks\nexport interface Event extends Log {\n\n    // The event name\n    event?: string;\n\n    // The event signature\n    eventSignature?: string;\n\n    // The parsed arguments to the event\n    args?: Result;\n\n    // If parsing the arguments failed, this is the error\n    decodeError?: Error;\n\n    // A function that can be used to decode event data and topics\n    decode?: (data: string, topics?: Array<string>) => any;\n\n    // A function that will remove the listener responsible for this event (if any)\n    removeListener: () => void;\n\n    // Get blockchain details about this event's block and transaction\n    getBlock: () => Promise<Block>;\n    getTransaction: () => Promise<TransactionResponse>;\n    getTransactionReceipt: () => Promise<TransactionReceipt>;\n}\n\nexport interface ContractReceipt extends TransactionReceipt {\n    events?: Array<Event>;\n}\n\nexport interface ContractTransaction extends TransactionResponse {\n    wait(confirmations?: number): Promise<ContractReceipt>;\n}\n\n///////////////////////////////\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n}\n\nasync function resolveName(resolver: Signer | Provider, nameOrPromise: string | Promise<string>): Promise<string> {\n    const name = await nameOrPromise;\n\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    }\n\n    // If it is already an address, just use it (after adding checksum)\n    try {\n        return getAddress(name);\n    } catch (error) { }\n\n    if (!resolver) {\n        logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\"\n        });\n    }\n\n    const address = await resolver.resolveName(name);\n\n    if (address == null) {\n        logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n}\n\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nasync function resolveAddresses(resolver: Signer | Provider, value: any, paramType: ParamType | Array<ParamType>): Promise<any> {\n    if (Array.isArray(paramType)) {\n        return await Promise.all(paramType.map((paramType, index) => {\n            return resolveAddresses(\n                resolver,\n                ((Array.isArray(value)) ? value[index]: value[paramType.name]),\n                paramType\n            );\n        }));\n    }\n\n    if (paramType.type === \"address\") {\n        return await resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n        return await resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n        if (!Array.isArray(value)) {\n            return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                argument: \"value\",\n                value\n            }));\n        }\n        return await Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n}\n\nasync function populateTransaction(contract: Contract, fragment: FunctionFragment, args: Array<any>): Promise<PopulatedTransaction> {\n    // If an extra argument is given, it is overrides\n    let overrides: CallOverrides = { };\n    if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n        overrides = shallowCopy(args.pop());\n    }\n\n    // Make sure the parameter count matches\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    // Populate \"from\" override (allow promises)\n    if (contract.signer) {\n        if (overrides.from) {\n            // Contracts with a Signer are from the Signer's frame-of-reference;\n            // but we allow overriding \"from\" if it matches the signer\n            overrides.from = resolveProperties({\n                override: resolveName(contract.signer, overrides.from),\n                signer: contract.signer.getAddress()\n            }).then(async (check) => {\n                if (getAddress(check.signer) !== check.override) {\n                    logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"overrides.from\"\n                    });\n                }\n\n                return check.override;\n            });\n\n        } else {\n            overrides.from = contract.signer.getAddress();\n        }\n\n    } else if (overrides.from) {\n        overrides.from = resolveName(contract.provider, overrides.from);\n\n    //} else {\n        // Contracts without a signer can override \"from\", and if\n        // unspecified the zero address is used\n        //overrides.from = AddressZero;\n    }\n\n    // Wait for all dependencies to be resolved (prefer the signer over the provider)\n    const resolved = await resolveProperties({\n        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n        address: contract.resolvedAddress,\n        overrides: (resolveProperties(overrides) || { })\n    });\n\n    // The ABI coded transaction\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx: PopulatedTransaction = {\n      data: data,\n      to: resolved.address\n    };\n\n    // Resolved Overrides\n    const ro = resolved.overrides;\n\n    // Populate simple overrides\n    if (ro.nonce != null) { tx.nonce = BigNumber.from(ro.nonce).toNumber(); }\n    if (ro.gasLimit != null) { tx.gasLimit = BigNumber.from(ro.gasLimit); }\n    if (ro.gasPrice != null) { tx.gasPrice = BigNumber.from(ro.gasPrice); }\n    if (ro.maxFeePerGas != null) { tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas); }\n    if (ro.maxPriorityFeePerGas != null) { tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas); }\n    if (ro.from != null) { tx.from = ro.from; }\n\n    if (ro.type != null) { tx.type = ro.type; }\n    if (ro.accessList != null) { tx.accessList = accessListify(ro.accessList); }\n\n    // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n    if (tx.gasLimit == null && fragment.gas != null) {\n        // Compute the intrinsic gas cost for this transaction\n        // @TODO: This is based on the yellow paper as of Petersburg; this is something\n        // we may wish to parameterize in v6 as part of the Network object. Since this\n        // is always a non-nil to address, we can ignore G_create, but may wish to add\n        // similar logic to the ContractFactory.\n        let intrinsic = 21000;\n        const bytes = arrayify(data);\n        for (let i = 0; i < bytes.length; i++) {\n            intrinsic += 4;\n            if (bytes[i]) { intrinsic += 64; }\n        }\n        tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    // Populate \"value\" override\n    if (ro.value) {\n        const roValue = BigNumber.from(ro.value);\n        if (!roValue.isZero() && !fragment.payable) {\n            logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides.value\",\n                value: overrides.value\n            });\n        }\n        tx.value = roValue;\n    }\n\n    if (ro.customData) {\n        tx.customData = shallowCopy(ro.customData);\n    }\n\n    if (ro.ccipReadEnabled) {\n        tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n    }\n\n    // Remove the overrides\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n\n    delete overrides.type;\n    delete overrides.accessList;\n\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n\n    delete overrides.customData;\n    delete overrides.ccipReadEnabled;\n\n    // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n    const leftovers = Object.keys(overrides).filter((key) => ((<any>overrides)[key] != null));\n    if (leftovers.length) {\n        logger.throwError(`cannot override ${ leftovers.map((l) => JSON.stringify(l)).join(\",\") }`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"overrides\",\n            overrides: leftovers\n        });\n    }\n\n    return tx;\n}\n\n\nfunction buildPopulate(contract: Contract, fragment: FunctionFragment): ContractFunction<PopulatedTransaction> {\n    return function(...args: Array<any>): Promise<PopulatedTransaction> {\n        return populateTransaction(contract, fragment, args);\n    };\n}\n\nfunction buildEstimate(contract: Contract, fragment: FunctionFragment): ContractFunction<BigNumber> {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return async function(...args: Array<any>): Promise<BigNumber> {\n        if (!signerOrProvider) {\n            logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"estimateGas\"\n            })\n        }\n\n        const tx = await populateTransaction(contract, fragment, args);\n        return await signerOrProvider.estimateGas(tx);\n    };\n}\n\nfunction addContractWait(contract: Contract, tx: TransactionResponse) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations?: number) => {\n        return wait(confirmations).then((receipt: ContractReceipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event: Event = (<Event>deepCopy(log));\n                let parsed: LogDescription = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                } catch (e){ }\n\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data: BytesLike, topics?: Array<any>) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n\n                // Useful operations\n                event.removeListener = () => { return contract.provider; }\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                }\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                }\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                }\n\n                return event;\n            });\n\n            return receipt;\n        });\n    };\n}\n\nfunction buildCall(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    const signerOrProvider = (contract.signer || contract.provider);\n\n    return async function(...args: Array<any>): Promise<any> {\n        // Extract the \"blockTag\" override if present\n        let blockTag = undefined;\n        if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            const overrides = shallowCopy(args.pop());\n            if (overrides.blockTag != null) {\n                blockTag = await overrides.blockTag;\n            }\n            delete overrides.blockTag;\n            args.push(overrides);\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed(blockTag);\n        }\n\n        // Call a node and get the result\n        const tx = await populateTransaction(contract, fragment, args);\n        const result = await signerOrProvider.call(tx, blockTag);\n\n        try {\n            let value = contract.interface.decodeFunctionResult(fragment, result);\n            if (collapseSimple && fragment.outputs.length === 1) {\n                value = value[0];\n            }\n            return value;\n\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) {\n                error.address = contract.address;\n                error.args = args;\n                error.transaction = tx;\n            }\n            throw error;\n         }\n    };\n}\n\nfunction buildSend(contract: Contract, fragment: FunctionFragment): ContractFunction<TransactionResponse> {\n    return async function(...args: Array<any>): Promise<TransactionResponse> {\n        if (!contract.signer) {\n            logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"sendTransaction\"\n            })\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed();\n        }\n\n        const txRequest = await populateTransaction(contract, fragment, args);\n\n        const tx = await contract.signer.sendTransaction(txRequest);\n\n        // Tweak the tx.wait so the receipt has extra properties\n        addContractWait(contract, tx);\n\n        return tx;\n    };\n}\n\nfunction buildDefault(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter: EventFilter): string {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\"): \"\");\n}\n\nclass RunningEvent {\n    readonly tag: string;\n    readonly filter: EventFilter;\n    private _listeners: Array<{ listener: Listener, once: boolean }>;\n\n    constructor(tag: string, filter: EventFilter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [ ];\n    }\n\n    addListener(listener: Listener, once: boolean): void {\n        this._listeners.push({ listener: listener, once: once });\n    }\n\n    removeListener(listener: Listener): void {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) { return true; }\n            done = true;\n            return false;\n        });\n    }\n\n    removeAllListeners(): void {\n        this._listeners = [];\n    }\n\n    listeners(): Array<Listener> {\n        return this._listeners.map((i) => i.listener);\n    }\n\n    listenerCount(): number {\n        return this._listeners.length;\n    }\n\n    run(args: Array<any>): number {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n\n            const argsCopy = args.slice();\n\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n\n        return listenerCount;\n    }\n\n    prepareEvent(event: Event): void {\n    }\n\n    // Returns the array that will be applied to an emit\n    getEmit(event: Event): Array<any> {\n        return [ event ];\n    }\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n\n\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n    readonly fragment: EventFragment;\n\n    constructor(address: string, contractInterface: Interface, fragment: EventFragment, topics?: Array<string|Array<string>>) {\n        const filter: EventFilter = {\n            address: address\n        }\n\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) { logger.throwArgumentError(\"topic mismatch\", \"topics\", topics); }\n            filter.topics = topics.slice();\n        } else {\n            filter.topics = [ topic ];\n        }\n\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n\n        event.decode = (data: BytesLike, topics?: Array<string>) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        } catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n\n    getEmit(event: Event): Array<any> {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) { throw errors[0].error; }\n\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n\n    constructor(address: string, contractInterface: Interface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n\n            event.decode = (data: BytesLike, topics?: Array<string>) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n\n            event.args = parsed.args;\n        } catch (error) {\n            // No matching event\n        }\n    }\n}\n\nexport type ContractInterface = string | ReadonlyArray<Fragment | JsonFragment | string> | Interface;\n\ntype InterfaceFunc = (contractInterface: ContractInterface) => Interface;\n\n\nexport class BaseContract {\n    readonly address: string;\n    readonly interface: Interface;\n\n    readonly signer: Signer;\n    readonly provider: Provider;\n\n    readonly functions: { [ name: string ]: ContractFunction };\n\n    readonly callStatic: { [ name: string ]: ContractFunction };\n    readonly estimateGas: { [ name: string ]: ContractFunction<BigNumber> };\n    readonly populateTransaction: { [ name: string ]: ContractFunction<PopulatedTransaction> };\n\n    readonly filters: { [ name: string ]: (...args: Array<any>) => EventFilter };\n\n    // This will always be an address. This will only differ from\n    // address if an ENS name was used in the constructor\n    readonly resolvedAddress: Promise<string>;\n\n    // This is only set if the contract was created with a call to deploy\n    readonly deployTransaction: TransactionResponse;\n\n    _deployedPromise: Promise<Contract>;\n\n    // A list of RunningEvents to track listeners for each event tag\n    _runningEvents: { [ eventTag: string ]: RunningEvent };\n\n    // Wrapped functions to call emit and allow deregistration from the provider\n    _wrappedEmits: { [ eventTag: string ]: (...args: Array<any>) => void };\n\n    constructor(addressOrName: string, contractInterface: ContractInterface, signerOrProvider?: Signer | Provider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        } else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        } else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        } else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n\n        defineReadOnly(this, \"callStatic\", { });\n        defineReadOnly(this, \"estimateGas\", { });\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"populateTransaction\", { });\n\n        defineReadOnly(this, \"filters\", { });\n\n        {\n            const uniqueFilters: { [ name: string ]: Array<string> } = { };\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args: Array<any>) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                   }\n                });\n                if (!uniqueFilters[event.name]) { uniqueFilters[event.name] = [ ]; }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                } else {\n                    logger.warn(`Duplicate definition of ${ name } (${ filters.join(\", \")})`);\n                }\n            });\n        }\n\n        defineReadOnly(this, \"_runningEvents\", { });\n        defineReadOnly(this, \"_wrappedEmits\", { });\n\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        } else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            } catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n\n        const uniqueNames: { [ name: string ]: Array<string> } = { };\n        const uniqueSignatures: { [ signature: string ]: boolean } = { };\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${ JSON.stringify(signature) }`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${ name }`]) { uniqueNames[`%${ name }`] = [ ]; }\n                uniqueNames[`%${ name }`].push(signature);\n            }\n\n            if ((<Contract>this)[signature] == null) {\n                defineReadOnly<any, any>(this, signature, buildDefault(this, fragment, true));\n            }\n\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) { return; }\n\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n\n            const signature = signatures[0];\n\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if ((<Contract>this)[name] == null) {\n                    defineReadOnly(<Contract>this, name, (<Contract>this)[signature]);\n                }\n            } catch (e) { }\n\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n\n    static getContractAddress(transaction: { from: string, nonce: BigNumberish }): string {\n        return getContractAddress(transaction);\n    }\n\n    static getInterface(contractInterface: ContractInterface): Interface {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n\n    // @TODO: Allow timeout?\n    deployed(): Promise<Contract> {\n        return this._deployed();\n    }\n\n    _deployed(blockTag?: BlockTag): Promise<Contract> {\n        if (!this._deployedPromise) {\n\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n\n            } else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n\n        return this._deployedPromise;\n    }\n\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n    fallback(overrides?: TransactionRequest): Promise<TransactionResponse> {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" })\n        }\n\n        const tx: Deferrable<TransactionRequest> = shallowCopy(overrides || {});\n\n        [\"from\", \"to\"].forEach(function(key) {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider: Signer | Provider | string): Contract {\n        if (typeof(signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n\n        const contract = new (<{ new(...args: any[]): Contract }>(this.constructor))(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n\n        return contract;\n    }\n\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName: string): Contract {\n        return new (<{ new(...args: any[]): Contract }>(this.constructor))(addressOrName, this.interface, this.signer || this.provider);\n    }\n\n    static isIndexed(value: any): value is Indexed {\n        return Indexed.isIndexed(value);\n    }\n\n    private _normalizeRunningEvent(runningEvent: RunningEvent): RunningEvent {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n         }\n         return runningEvent\n    }\n\n    private _getRunningEvent(eventName: EventFilter | string): RunningEvent {\n        if (typeof(eventName) === \"string\") {\n\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName)\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof(topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            } catch (error) { }\n\n            // Filter by the unknown topichash\n            const filter: EventFilter = {\n                address: this.address,\n                topics: eventName.topics\n            }\n\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n\n    _checkRunningEvents(runningEvent: RunningEvent): void {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent: RunningEvent, log: Log, listener: Listener): Event {\n        const event = <Event>deepCopy(log);\n\n        event.removeListener = () => {\n            if (!listener) { return; }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); }\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); }\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); }\n\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n\n        return event;\n    }\n\n    private _addEventListener(runningEvent: RunningEvent, listener: Listener, once: boolean): void {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" })\n        }\n\n        runningEvent.addListener(listener, once);\n\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log: Log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    } catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n\n    queryFilter(event: EventFilter | string, fromBlockOrBlockhash?: BlockTag | string, toBlock?: BlockTag): Promise<Array<Event>> {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n\n        if (typeof(fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            (<FilterByBlockHash>filter).blockHash = fromBlockOrBlockhash;\n        } else {\n             (<Filter>filter).fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash: 0);\n             (<Filter>filter).toBlock = ((toBlock != null) ? toBlock: \"latest\");\n        }\n\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n\n    on(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n\n    once(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n\n    emit(eventName: EventFilter | string, ...args: Array<any>): boolean {\n        if (!this.provider) { return false; }\n\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventFilter | string): number {\n        if (!this.provider) { return 0; }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n\n    listeners(eventName?: EventFilter | string): Array<Listener> {\n        if (!this.provider) { return []; }\n\n        if (eventName == null) {\n            const result: Array<Listener> = [ ];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener)\n                });\n            }\n            return result;\n        }\n\n        return this._getRunningEvent(eventName).listeners();\n    }\n\n    removeAllListeners(eventName?: EventFilter | string): this {\n        if (!this.provider) { return this; }\n\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n\n        return this;\n    }\n\n    off(eventName: EventFilter | string, listener: Listener): this {\n        if (!this.provider) { return this; }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n\n    removeListener(eventName: EventFilter | string, listener: Listener): this {\n        return this.off(eventName, listener);\n    }\n\n}\n\nexport class Contract extends BaseContract {\n    // The meta-class properties\n    readonly [ key: string ]: ContractFunction | any;\n}\n\nexport class ContractFactory {\n\n    readonly interface: Interface;\n    readonly bytecode: string;\n    readonly signer: Signer;\n\n    constructor(contractInterface: ContractInterface, bytecode: BytesLike | { object: string }, signer?: Signer) {\n\n        let bytecodeHex: string = null;\n\n        if (typeof(bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        } else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        } else if (bytecode && typeof(bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = (<any>bytecode).object;\n        } else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") { bytecodeHex = \"0x\" + bytecodeHex; }\n\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args: Array<any>): TransactionRequest {\n        let tx: TransactionRequest = { };\n\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n\n        return tx\n    }\n\n    async deploy(...args: Array<any>): Promise<Contract> {\n\n        let overrides: any = { };\n\n        // If 1 extra parameter was passed in, it contains overrides\n        if (args.length === this.interface.deploy.inputs.length + 1) {\n            overrides = args.pop();\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Resolve ENS names and promises in the arguments\n        const params = await resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n        params.push(overrides);\n\n        // Get the deployment transaction (with optional overrides)\n        const unsignedTx = this.getDeployTransaction(...params);\n\n        // Send the deployment transaction\n        const tx = await this.signer.sendTransaction(unsignedTx);\n\n        const address = getStatic<(tx: TransactionResponse) => string>(this.constructor, \"getContractAddress\")(tx);\n        const contract = getStatic<(address: string, contractInterface: ContractInterface, signer?: Signer) => Contract>(this.constructor, \"getContract\")(address, this.interface, this.signer);\n\n        // Add the modified wait that wraps events\n        addContractWait(contract, tx);\n\n        defineReadOnly(contract, \"deployTransaction\", tx);\n        return contract;\n    }\n\n    attach(address: string): Contract {\n        return (<any>(this.constructor)).getContract(address, this.interface, this.signer);\n    }\n\n    connect(signer: Signer) {\n        return new (<{ new(...args: any[]): ContractFactory }>(this.constructor))(this.interface, this.bytecode, signer);\n    }\n\n    static fromSolidity(compilerOutput: any, signer?: Signer): ContractFactory {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n\n        if (typeof(compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n\n        const abi = compilerOutput.abi;\n\n        let bytecode: any = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, signer);\n    }\n\n    static getInterface(contractInterface: ContractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n\n    static getContractAddress(tx: { from: string, nonce: BytesLike | BigNumber | number }): string {\n        return getContractAddress(tx);\n    }\n\n    static getContract(address: string, contractInterface: ContractInterface, signer?: Signer): Contract {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n","export const version = \"contracts/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BigNumber, BigNumberish, isBigNumberish } from \"./bignumber\";\n\nconst _constructorGuard = { };\n\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value !== undefined) { params.value = value; }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) { zeros += zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals: BigNumberish): string {\n\n    if (typeof(decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        } catch (e) { }\n    }\n\n    if (typeof(decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value: BigNumberish, decimals?: string | BigNumberish): string {\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n\n    const negative = value.lt(Zero);\n    if (negative) { value = value.mul(NegativeOne); }\n\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) { fraction = \"0\" + fraction; }\n\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    } else {\n        value = whole + \".\" + fraction;\n    }\n\n    if (negative) { value = \"-\" + value; }\n\n    return value;\n}\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    if (typeof(value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) { value = value.substring(1); }\n\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) { whole = \"0\"; }\n    if (!fraction) { fraction = \"0\"; }\n\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") { fraction = \"0\"; }\n\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) { fraction += \"0\"; }\n\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n\n    if (negative) { wei = wei.mul(NegativeOne); }\n\n    return wei;\n}\n\n\nexport class FixedFormat {\n    readonly signed: boolean;\n    readonly width: number;\n    readonly decimals: number;\n    readonly name: string;\n    readonly _multiplier: string;\n\n    constructor(constructorGuard: any, signed: boolean, width: number, decimals: number) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n\n        this.name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n        this._multiplier = getMultiplier(decimals);\n\n        Object.freeze(this);\n    }\n\n    static from(value: any): FixedFormat {\n        if (value instanceof FixedFormat) { return value; }\n\n        if (typeof(value) === \"number\") {\n            value = `fixed128x${value}`\n        }\n\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n\n        if (typeof(value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            } else if (value === \"ufixed\") {\n                signed = false;\n            } else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) { logger.throwArgumentError(\"invalid fixed format\", \"format\", value); }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        } else if (value) {\n            const check = (key: string, type: string, defaultValue: any): any => {\n                if (value[key] == null) { return defaultValue; }\n                if (typeof(value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            }\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\n\nexport class FixedNumber {\n    readonly format: FixedFormat;\n    readonly _hex: string;\n    readonly _value: string;\n\n    readonly _isFixedNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string, value: string, format?: FixedFormat) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n\n        this._isFixedNumber = true;\n\n        Object.freeze(this);\n    }\n\n    _checkFormat(other: FixedNumber): void {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n\n    addUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n\n    subUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n\n    divUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n\n    floor(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    ceiling(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    // @TODO: Support other rounding algorithms\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n\n        if (comps[1].length <= decimals) { return this; }\n\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n\n    isZero(): boolean {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n\n    isNegative(): boolean {\n        return (this._value[0] === \"-\");\n    }\n\n    toString(): string { return this._value; }\n\n    toHexString(width?: number): string {\n        if (width == null) { return this._hex; }\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    toFormat(format: FixedFormat | string): FixedNumber {\n        return FixedNumber.fromString(this._value, format);\n    }\n\n\n    static fromValue(value: BigNumber, decimals?: BigNumberish, format?: FixedFormat | string | number): FixedNumber {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n\n        if (decimals == null) { decimals = 0; }\n        if (format == null) { format = \"fixed\"; }\n\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n\n\n    static fromString(value: string, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        const numeric = parseFixed(value, fixedFormat.decimals);\n\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n\n        let hex: string = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        } else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static fromBytes(value: BytesLike, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) { numeric = numeric.fromTwos(fixedFormat.width); }\n\n        const hex = numeric.toTwos((fixedFormat.signed ? 0: 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static from(value: any, format?: FixedFormat | string | number) {\n        if (typeof(value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        } catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n\n    static isFixedNumber(value: any): value is FixedNumber {\n        return !!(value && value._isFixedNumber);\n    }\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider, TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { ExternallyOwnedAccount, Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { arrayify, Bytes, BytesLike, concat, hexDataSlice, isHexString, joinSignature, SignatureLike } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic, Mnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize, UnsignedTransaction } from \"@ethersproject/transactions\";\nimport { Wordlist } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction isAccount(value: any): value is ExternallyOwnedAccount {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\n\nexport class Wallet extends Signer implements ExternallyOwnedAccount, TypedDataSigner {\n\n    readonly address: string;\n    readonly provider: Provider;\n\n    // Wrapping the _signingKey and _mnemonic in a getter function prevents\n    // leaking the private key in console.log; still, be careful! :)\n    readonly _signingKey: () => SigningKey;\n    readonly _mnemonic: () => Mnemonic;\n\n    constructor(privateKey: BytesLike | ExternallyOwnedAccount | SigningKey, provider?: Provider) {\n        super();\n\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => (\n                    {\n                        phrase: srcMnemonic.phrase,\n                        path: srcMnemonic.path || defaultPath,\n                        locale: srcMnemonic.locale || \"en\"\n                    }\n                ));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            } else {\n                defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            }\n\n\n        } else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => (<SigningKey>privateKey));\n\n            } else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof(privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n\n            defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    get mnemonic(): Mnemonic { return this._mnemonic(); }\n    get privateKey(): string { return this._signingKey().privateKey; }\n    get publicKey(): string { return this._signingKey().publicKey; }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    connect(provider: Provider): Wallet {\n        return new Wallet(this, provider);\n    }\n\n    signTransaction(transaction: TransactionRequest): Promise<string> {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n\n            const signature = this._signingKey().signDigest(keccak256(serialize(<UnsignedTransaction>tx)));\n            return serialize(<UnsignedTransaction>tx, signature);\n        });\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            if (this.provider == null) {\n                logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                });\n            }\n            return this.provider.resolveName(name);\n        });\n\n        return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    }\n\n    encrypt(password: Bytes | string, options?: any, progressCallback?: ProgressCallback): Promise<string> {\n        if (typeof(options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n\n        if (progressCallback && typeof(progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n\n        if (!options) { options = {}; }\n\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n\n\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options?: any): Wallet {\n        let entropy: Uint8Array = randomBytes(16);\n\n        if (!options) { options = { }; }\n\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16));\n        }\n\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n\n    static fromEncryptedJson(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<Wallet> {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n\n    static fromEncryptedJsonSync(json: string, password: Bytes | string): Wallet {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n\n    static fromMnemonic(mnemonic: string, path?: string, wordlist?: Wordlist): Wallet {\n        if (!path) { path = defaultPath; }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\n\nexport function verifyMessage(message: Bytes | string, signature: SignatureLike): string {\n    return recoverAddress(hashMessage(message), signature);\n}\n\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n","export const version = \"wallet/5.7.0\";\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\": \"0x00\");\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\")\n\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type)\n        }\n\n        if (isArray) { size = 256; }\n\n        value = BigNumber.from(value).toTwos(size);\n\n        return zeroPad(value, size / 8);\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type)\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${ type }`, \"value\", value)\n        }\n        if (isArray) { return arrayify((value + Zeros).substring(0, 66)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${ type }`, \"value\", value)\n        }\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values)\n    }\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\nexport function keccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashKeccak256(pack(types, values));\n}\n\nexport function sha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashSha256(pack(types, values));\n}\n","export const version = \"solidity/5.7.0\";\n","\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n","\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n","export const version = \"units/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value: string | number): string {\n    const comps = String(value).split(\".\");\n\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") { whole = whole.substring(1); }\n    if (whole === \"\") { whole = \"0\"; }\n\n    let suffix = \"\";\n    if (comps.length === 2) { suffix = \".\" + (comps[1] || \"0\"); }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        } else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n\n    return negative + formatted.join(\",\") + suffix;\n}\n\nexport function formatUnits(value: BigNumberish, unitName?: string | BigNumberish): string {\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return formatFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function parseUnits(value: string, unitName?: BigNumberish): BigNumber {\n    if (typeof(value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return parseFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\nexport function parseEther(ether: string): BigNumber {\n    return parseUnits(ether, 18);\n}\n\n","export const version = \"web/5.7.1\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","export const version = \"ethers/5.7.2\";\n","\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n","\"use strict\";\n\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\n\nimport * as ethers from \"./ethers\";\n\ntry {\n    const anyGlobal = (window as any);\n\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n} catch (error) { }\n\nexport { ethers };\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n} from \"./ethers\";\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"\\\"@gnosis.pm/safe-react-gateway-sdk\\\"\"] = factory();\n\telse\n\t\troot[\"\\\"@gnosis.pm/safe-react-gateway-sdk\\\"\"] = factory();\n})(this, function() {\nreturn ","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export enum SafeAppAccessPolicyTypes {\n  NoRestrictions = 'NO_RESTRICTIONS',\n  DomainAllowlist = 'DOMAIN_ALLOWLIST',\n}\n\nexport type SafeAppNoRestrictionsPolicy = {\n  type: SafeAppAccessPolicyTypes.NoRestrictions\n}\n\nexport type SafeAppDomainAllowlistPolicy = {\n  type: SafeAppAccessPolicyTypes.DomainAllowlist\n  value: string[]\n}\n\nexport type SafeAppsAccessControlPolicies = SafeAppNoRestrictionsPolicy | SafeAppDomainAllowlistPolicy\n\nexport type SafeAppProvider = {\n  url: string\n  name: string\n}\n\nexport type SafeAppData = {\n  id: number\n  url: string\n  name: string\n  iconUrl: string\n  description: string\n  chainIds: string[]\n  provider?: SafeAppProvider\n  accessControl: SafeAppsAccessControlPolicies\n  tags: string[]\n}\n\nexport type SafeAppsResponse = SafeAppData[]\n","import { AddressEx, TokenInfo } from './common'\n\nexport type ParamValue = string | ParamValue[]\n\nexport enum Operation {\n  CALL = 0,\n  DELEGATE = 1,\n}\n\nexport type InternalTransaction = {\n  operation: Operation\n  to: string\n  value: string | null\n  data: string | null\n  dataDecoded: DataDecoded | null\n}\n\nexport type ValueDecodedType = InternalTransaction[]\n\nexport type Parameter = {\n  name: string\n  type: string\n  value: ParamValue\n  valueDecoded: ValueDecodedType | null\n}\n\nexport type DataDecoded = {\n  method: string\n  parameters: Parameter[] | null\n}\n\nexport enum TransactionStatus {\n  AWAITING_CONFIRMATIONS = 'AWAITING_CONFIRMATIONS',\n  AWAITING_EXECUTION = 'AWAITING_EXECUTION',\n  CANCELLED = 'CANCELLED',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  WILL_BE_REPLACED = 'WILL_BE_REPLACED',\n}\n\nexport enum TransferDirection {\n  INCOMING = 'INCOMING',\n  OUTGOING = 'OUTGOING',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport enum TransactionTokenType {\n  ERC20 = 'ERC20',\n  ERC721 = 'ERC721',\n  NATIVE_COIN = 'NATIVE_COIN',\n}\n\nexport type Erc20Transfer = {\n  type: TransactionTokenType.ERC20\n  tokenAddress: string\n  tokenName: string | null\n  tokenSymbol: string | null\n  logoUri: string | null\n  decimals: number | null\n  value: string\n}\n\nexport type Erc721Transfer = {\n  type: TransactionTokenType.ERC721\n  tokenAddress: string\n  tokenId: string\n  tokenName: string | null\n  tokenSymbol: string | null\n  logoUri: string | null\n}\n\nexport type NativeCoinTransfer = {\n  type: TransactionTokenType.NATIVE_COIN\n  value: string\n}\n\nexport type TransferInfo = Erc20Transfer | Erc721Transfer | NativeCoinTransfer\n\nexport interface Transfer {\n  type: 'Transfer'\n  sender: AddressEx\n  recipient: AddressEx\n  direction: TransferDirection\n  transferInfo: TransferInfo\n}\n\nexport type SetFallbackHandler = {\n  type: 'SET_FALLBACK_HANDLER'\n  handler: AddressEx\n}\n\nexport type AddOwner = {\n  type: 'ADD_OWNER'\n  owner: AddressEx\n  threshold: number\n}\n\nexport type RemoveOwner = {\n  type: 'REMOVE_OWNER'\n  owner: AddressEx\n  threshold: number\n}\n\nexport type SwapOwner = {\n  type: 'SWAP_OWNER'\n  oldOwner: AddressEx\n  newOwner: AddressEx\n}\n\nexport type ChangeThreshold = {\n  type: 'CHANGE_THRESHOLD'\n  threshold: number\n}\n\nexport type ChangeImplementation = {\n  type: 'CHANGE_IMPLEMENTATION'\n  implementation: AddressEx\n}\n\nexport type EnableModule = {\n  type: 'ENABLE_MODULE'\n  module: AddressEx\n}\n\nexport type DisableModule = {\n  type: 'DISABLE_MODULE'\n  module: AddressEx\n}\n\nexport type SetGuard = {\n  type: 'SET_GUARD'\n  guard: AddressEx\n}\n\nexport type DeleteGuard = {\n  type: 'DELETE_GUARD'\n}\n\nexport type SettingsInfo =\n  | SetFallbackHandler\n  | AddOwner\n  | RemoveOwner\n  | SwapOwner\n  | ChangeThreshold\n  | ChangeImplementation\n  | EnableModule\n  | DisableModule\n  | SetGuard\n  | DeleteGuard\n\nexport type SettingsChange = {\n  type: 'SettingsChange'\n  dataDecoded: DataDecoded\n  settingsInfo: SettingsInfo | null\n}\n\nexport interface Custom {\n  type: 'Custom'\n  to: AddressEx\n  dataSize: string\n  value: string\n  methodName: string | null\n  actionCount: number | null\n  isCancellation: boolean\n}\n\nexport type MultiSend = {\n  type: 'Custom'\n  to: AddressEx\n  dataSize: string\n  value: string\n  methodName: 'multiSend'\n  actionCount: number\n  isCancellation: boolean\n}\n\nexport type Creation = {\n  type: 'Creation'\n  creator: AddressEx\n  transactionHash: string\n  implementation: AddressEx | null\n  factory: AddressEx | null\n}\n\nexport type TransactionInfo = Transfer | SettingsChange | Custom | MultiSend | Creation\n\nexport type ModuleExecutionInfo = {\n  type: 'MODULE'\n  address: AddressEx\n}\n\nexport type MultisigExecutionInfo = {\n  type: 'MULTISIG'\n  nonce: number\n  confirmationsRequired: number\n  confirmationsSubmitted: number\n  missingSigners: AddressEx[] | null\n}\n\nexport type ExecutionInfo = ModuleExecutionInfo | MultisigExecutionInfo\n\nexport type TransactionSummary = {\n  id: string\n  timestamp: number\n  txStatus: TransactionStatus\n  txInfo: TransactionInfo\n  executionInfo?: ExecutionInfo\n  safeAppInfo?: SafeAppInfo\n}\n\nexport type Transaction = {\n  transaction: TransactionSummary\n  conflictType: 'None' | 'HasNext' | 'End'\n  type: 'TRANSACTION'\n}\n\nexport type DateLabel = {\n  timestamp: number\n  type: 'DATE_LABEL'\n}\n\n/**\n * @see https://gnosis.github.io/safe-client-gateway/docs/routes/transactions/models/summary/enum.Label.html\n */\nexport enum LabelValue {\n  Queued = 'Queued',\n  Next = 'Next',\n}\n\nexport type Label = {\n  label: LabelValue\n  type: 'LABEL'\n}\n\nexport type ConflictHeader = {\n  nonce: number\n  type: 'CONFLICT_HEADER'\n}\n\nexport type TransactionListItem = Transaction | Label | ConflictHeader\n\ntype Page<T> = {\n  next?: string\n  previous?: string\n  results: Array<T>\n}\n\nexport type TransactionListPage = Page<TransactionListItem>\n\nexport type MultisigTransactionRequest = {\n  to: string\n  value: string\n  data: string | null\n  nonce: string\n  operation: Operation\n  safeTxGas: string\n  baseGas: string\n  gasPrice: string\n  gasToken: string\n  refundReceiver: string | null\n  safeTxHash: string\n  sender: string\n  signature?: string | null\n  origin: string | null\n}\n\n/* Transaction details types */\nexport type SafeAppInfo = {\n  name: string\n  url: string\n  logoUri: string\n}\n\nexport type TransactionData = {\n  hexData: string | null\n  dataDecoded: DataDecoded | null\n  to: AddressEx\n  value: string | null\n  operation: Operation\n  addressInfoIndex: { [key: string]: AddressEx } | null\n  trustedDelegateCallTarget: boolean\n}\n\nexport type ModuleExecutionDetails = {\n  type: 'MODULE'\n  address: AddressEx\n}\n\nexport type MultisigConfirmation = {\n  signer: AddressEx\n  signature: string | null\n  submittedAt: number\n}\n\nexport type MultisigExecutionDetails = {\n  type: 'MULTISIG'\n  submittedAt: number\n  nonce: number\n  safeTxGas: string\n  baseGas: string\n  gasPrice: string\n  gasToken: string\n  refundReceiver: AddressEx\n  safeTxHash: string\n  executor: AddressEx | null\n  signers: AddressEx[]\n  confirmationsRequired: number\n  confirmations: MultisigConfirmation[]\n  rejectors: AddressEx[] | null\n  gasTokenInfo: TokenInfo | null\n}\n\nexport type DetailedExecutionInfo = ModuleExecutionDetails | MultisigExecutionDetails\n\nexport type TransactionDetails = {\n  txId: string\n  executedAt: number | null\n  txStatus: TransactionStatus\n  txInfo: TransactionInfo\n  txData: TransactionData | null\n  detailedExecutionInfo: DetailedExecutionInfo | null\n  txHash: string | null\n  safeAppInfo: SafeAppInfo | null\n}\n\n/* Transaction details types end */\n\n/* Transaction estimation types */\n\nexport type SafeTransactionEstimationRequest = {\n  to: string\n  value: string\n  data: string\n  operation: Operation\n}\n\n// CGW v2 response\nexport type SafeTransactionEstimation = {\n  currentNonce: number\n  recommendedNonce: number\n  safeTxGas: string\n}\n\n/* Transaction estimation types end */\n","export enum RPC_AUTHENTICATION {\n  API_KEY_PATH = 'API_KEY_PATH',\n  NO_AUTHENTICATION = 'NO_AUTHENTICATION',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport type RpcUri = {\n  authentication: RPC_AUTHENTICATION\n  value: string\n}\n\nexport type BlockExplorerUriTemplate = {\n  address: string\n  txHash: string\n  api: string\n}\n\nexport type NativeCurrency = {\n  name: string\n  symbol: string\n  decimals: number\n  logoUri: string\n}\n\nexport type Theme = {\n  textColor: string\n  backgroundColor: string\n}\n\nexport enum GAS_PRICE_TYPE {\n  ORACLE = 'ORACLE',\n  FIXED = 'FIXED',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport type GasPriceOracle = {\n  type: GAS_PRICE_TYPE.ORACLE\n  uri: string\n  gasParameter: string\n  gweiFactor: string\n}\n\nexport type GasPriceFixed = {\n  type: GAS_PRICE_TYPE.FIXED\n  weiValue: string\n}\n\nexport type GasPriceUnknown = {\n  type: GAS_PRICE_TYPE.UNKNOWN\n}\n\nexport type GasPrice = (GasPriceOracle | GasPriceFixed | GasPriceUnknown)[]\n\nexport enum FEATURES {\n  ERC721 = 'ERC721',\n  SAFE_APPS = 'SAFE_APPS',\n  CONTRACT_INTERACTION = 'CONTRACT_INTERACTION',\n  DOMAIN_LOOKUP = 'DOMAIN_LOOKUP',\n  SPENDING_LIMIT = 'SPENDING_LIMIT',\n  EIP1559 = 'EIP1559',\n  SAFE_TX_GAS_OPTIONAL = 'SAFE_TX_GAS_OPTIONAL',\n}\n\n// Remain agnostic as possible and reference what is returned in the CGW, i.e.\n// https://gnosis.github.io/safe-client-gateway/docs/routes/chains/models/struct.ChainInfo.html\nexport type ChainInfo = {\n  transactionService: string\n  chainId: string // Restricted by what is returned by the CGW\n  chainName: string\n  shortName: string\n  l2: boolean\n  description: string\n  rpcUri: RpcUri\n  safeAppsRpcUri: RpcUri\n  publicRpcUri: RpcUri\n  blockExplorerUriTemplate: BlockExplorerUriTemplate\n  nativeCurrency: NativeCurrency\n  theme: Theme\n  ensRegistryAddress?: string\n  gasPrice: GasPrice\n  disabledWallets: string[]\n  features: FEATURES[]\n}\n\nexport type ChainListResponse = {\n  next: string | null\n  previous: string | null\n  results: ChainInfo[]\n}\n","export type AddressEx = {\n  value: string\n  name: string | null\n  logoUri: string | null\n}\n\nexport type SafeInfo = {\n  address: AddressEx\n  chainId: string\n  nonce: number\n  threshold: number\n  owners: AddressEx[]\n  implementation: AddressEx\n  modules: AddressEx[]\n  guard: AddressEx\n  fallbackHandler: AddressEx\n  version: string\n  collectiblesTag: string\n  txQueuedTag: string\n  txHistoryTag: string\n}\n\nexport type FiatCurrencies = string[]\n\nexport type OwnedSafes = { safes: string[] }\n\nexport enum TokenType {\n  ERC20 = 'ERC20',\n  ERC721 = 'ERC721',\n  NATIVE_TOKEN = 'NATIVE_TOKEN',\n}\n\nexport type TokenInfo = {\n  type: TokenType\n  address: string\n  decimals: number\n  symbol: string\n  name: string\n  logoUri: string | null\n}\n\nexport type SafeBalanceResponse = {\n  fiatTotal: string\n  items: Array<{\n    tokenInfo: TokenInfo\n    balance: string\n    fiatBalance: string\n    fiatConversion: string\n  }>\n}\n\nexport type SafeCollectibleResponse = {\n  address: string\n  tokenName: string\n  tokenSymbol: string\n  logoUri: string\n  id: string\n  uri: string\n  name: string\n  description: string\n  imageUri: string\n  metadata: { [key: string]: string }\n}\n","import fetch from 'cross-fetch'\n\nexport type Params = Record<string, string | number | boolean | null>\n\nexport type ErrorResponse = {\n  code: number\n  message: string\n}\n\nfunction replaceParam(str: string, key: string, value: string): string {\n  return str.replace(new RegExp(`\\\\{${key}\\\\}`, 'g'), value)\n}\n\nexport function insertParams(template: string, params?: Params): string {\n  return params\n    ? Object.keys(params).reduce((result: string, key) => {\n        return replaceParam(result, key, String(params[key]))\n      }, template)\n    : template\n}\n\nexport function stringifyQuery(query?: Params): string {\n  if (!query) {\n    return ''\n  }\n\n  const searchParams = new URLSearchParams()\n  Object.keys(query).forEach((key) => {\n    if (query[key] != null) {\n      searchParams.append(key, String(query[key]))\n    }\n  })\n  const searchString = searchParams.toString()\n  return searchString ? `?${searchString}` : ''\n}\n\nexport async function fetchData<T>(url: string, body?: unknown): Promise<T> {\n  let options:\n    | {\n        method: 'POST'\n        headers: Record<string, string>\n        body: string\n      }\n    | undefined\n  if (body != null) {\n    options = {\n      method: 'POST',\n      body: typeof body === 'string' ? body : JSON.stringify(body),\n      headers: { 'Content-Type': 'application/json' },\n    }\n  }\n\n  const resp = await fetch(url, options)\n  const json = await resp.json()\n\n  if (!resp.ok) {\n    let errTxt = ''\n    try {\n      const err = json as ErrorResponse\n      errTxt = `${err.code}: ${err.message}`\n    } catch (e) {\n      errTxt = resp.statusText\n    }\n    throw new Error(errTxt)\n  }\n\n  return json\n}\n","import { fetchData, insertParams, stringifyQuery } from './utils'\nimport { paths } from './types/api'\n\ntype Primitive = string | number | boolean | null\n\ninterface Params {\n  path?: { [key: string]: Primitive }\n  query?: { [key: string]: Primitive }\n  body?: unknown\n}\n\nexport function callEndpoint<T extends keyof paths>(\n  baseUrl: string,\n  path: T,\n  parameters?: paths[T]['get']['parameters'],\n  rawUrl?: string,\n): Promise<paths[T]['get']['responses'][200]['schema']> {\n  if (rawUrl) {\n    return fetchData(rawUrl)\n  }\n\n  const params = parameters as Params\n  const pathname = insertParams(path, params?.path)\n  const search = stringifyQuery(params?.query)\n  const url = `${baseUrl}${pathname}${search}`\n\n  return fetchData(url, params?.body)\n}\n","import { callEndpoint } from './endpoint'\nimport { operations } from './types/api'\nimport { SafeTransactionEstimation, TransactionDetails, TransactionListPage } from './types/transactions'\nimport { FiatCurrencies, OwnedSafes, SafeBalanceResponse, SafeCollectibleResponse, SafeInfo } from './types/common'\nimport { ChainListResponse, ChainInfo } from './types/chains'\nimport { SafeAppsResponse } from './types/safe-apps'\nimport { MasterCopyReponse } from './types/master-copies'\nimport { DecodedDataResponse } from './types/decoded-data'\nexport * from './types/safe-apps'\nexport * from './types/transactions'\nexport * from './types/chains'\nexport * from './types/common'\nexport * from './types/master-copies'\nexport * from './types/decoded-data'\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\n/**\n * Get basic information about a Safe. E.g. owners, modules, version etc\n */\nexport function getSafeInfo(baseUrl: string, chainId: string, address: string): Promise<SafeInfo> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/safes/{address}', { path: { chainId, address } })\n}\n\n/**\n * Get the total balance and all assets stored in a Safe\n */\nexport function getBalances(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  currency = 'usd',\n  query: operations['safes_balances_list']['parameters']['query'] = {},\n): Promise<SafeBalanceResponse> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/safes/{address}/balances/{currency}', {\n    path: { chainId, address, currency },\n    query,\n  })\n}\n\n/**\n * Get a list of supported fiat currencies (e.g. USD, EUR etc)\n */\nexport function getFiatCurrencies(baseUrl: string): Promise<FiatCurrencies> {\n  return callEndpoint(baseUrl, '/v1/balances/supported-fiat-codes')\n}\n\n/**\n * Get the addresses of all Safes belonging to an owner\n */\nexport function getOwnedSafes(baseUrl: string, chainId: string, address: string): Promise<OwnedSafes> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/owners/{address}/safes', { path: { chainId, address } })\n}\n\n/**\n * Get NFTs stored in a Safe\n */\nexport function getCollectibles(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  query: operations['safes_collectibles_list']['parameters']['query'] = {},\n): Promise<SafeCollectibleResponse[]> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/safes/{address}/collectibles', {\n    path: { chainId, address },\n    query,\n  })\n}\n\n/**\n * Get a list of past Safe transactions\n */\nexport function getTransactionHistory(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  pageUrl?: string,\n): Promise<TransactionListPage> {\n  return callEndpoint(\n    baseUrl,\n    '/v1/chains/{chainId}/safes/{safe_address}/transactions/history',\n    { path: { chainId, safe_address: address }, query: {} },\n    pageUrl,\n  )\n}\n\n/**\n * Get the list of pending transactions\n */\nexport function getTransactionQueue(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  pageUrl?: string,\n): Promise<TransactionListPage> {\n  return callEndpoint(\n    baseUrl,\n    '/v1/chains/{chainId}/safes/{safe_address}/transactions/queued',\n    { path: { chainId, safe_address: address }, query: {} },\n    pageUrl,\n  )\n}\n\n/**\n * Get the details of an individual transaction by its id\n */\nexport function getTransactionDetails(\n  baseUrl: string,\n  chainId: string,\n  transactionId: string,\n): Promise<TransactionDetails> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/transactions/{transactionId}', {\n    path: { chainId, transactionId },\n  })\n}\n\n/**\n * Request a gas estimate & recommmended tx nonce for a created transaction\n */\nexport function postSafeGasEstimation(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  body: operations['post_safe_gas_estimation']['parameters']['body'],\n): Promise<SafeTransactionEstimation> {\n  return callEndpoint(baseUrl, '/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations', {\n    path: { chainId, safe_address: address },\n    body,\n  })\n}\n\n/**\n * Propose a new transaction for other owners to sign/execute\n */\nexport function proposeTransaction(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  body: operations['propose_transaction']['parameters']['body'],\n): Promise<TransactionDetails> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/transactions/{safe_address}/propose', {\n    path: { chainId, safe_address: address },\n    body,\n  })\n}\n\n/**\n * Returns all defined chain configs\n */\nexport function getChainsConfig(\n  baseUrl: string,\n  query?: operations['chains_list']['parameters']['query'],\n): Promise<ChainListResponse> {\n  return callEndpoint(baseUrl, '/v1/chains', {\n    query,\n  })\n}\n\n/**\n * Returns a chain config\n */\nexport function getChainConfig(baseUrl: string, chainId: string): Promise<ChainInfo> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}', {\n    path: { chainId: chainId },\n  })\n}\n\n/**\n * Returns Safe Apps List\n */\nexport function getSafeApps(\n  baseUrl: string,\n  chainId: string,\n  query: operations['safe_apps_read']['parameters']['query'] = {},\n): Promise<SafeAppsResponse> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/safe-apps', {\n    path: { chainId: chainId },\n    query,\n  })\n}\n\n/**\n * Returns list of Master Copies\n */\nexport function getMasterCopies(baseUrl: string, chainId: string): Promise<MasterCopyReponse> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/about/master-copies', {\n    path: { chainId: chainId },\n  })\n}\n\n/**\n * Returns decoded data\n */\nexport function getDecodedData(\n  baseUrl: string,\n  chainId: string,\n  encodedData: operations['data_decoder']['parameters']['body']['data'],\n): Promise<DecodedDataResponse> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/data-decoder', {\n    path: { chainId: chainId },\n    body: { data: encodedData },\n  })\n}\n/* eslint-enable @typescript-eslint/explicit-module-boundary-types */\n"],"names":["PostMessageCommunicator","allowedOrigins","debugMode","Map","origin","data","emptyOrMalformed","sentFromParentEl","source","window","parent","allowedSDKVersion","version","parseInt","split","validOrigin","Array","isArray","undefined","find","regExp","test","msg","console","info","isValidMessage","logIncomingMessage","handleIncomingMessage","payload","id","cb","callbacks","get","delete","method","params","request","messageFormatter_1","makeRequest","Error","postMessage","Promise","resolve","reject","set","response","success","error","addEventListener","onParentMessage","exports","__exportStar","MessageFormatter","env","sdkVersion","Methods","dec2hex","dec","toString","padStart","len","arr","Uint8Array","crypto","getRandomValues","from","join","generateId","Date","getTime","eth_call","eth_gasPrice","eth_getLogs","eth_getBalance","eth_getCode","eth_getBlockByHash","eth_getBlockByNumber","eth_getStorageAt","eth_getTransactionByHash","eth_getTransactionReceipt","eth_getTransactionCount","eth_estimateGas","inputFormatters","defaultBlockParam","arg","returnFullTxObjectParam","blockNumberToHex","Number","isInteger","Eth","communicator","call","buildRequest","constants_1","formatters","getBalance","getCode","getStorageAt","getPastLogs","getBlockByHash","getBlockByNumber","getTransactionByHash","getTransactionReceipt","getTransactionCount","getGasPrice","getEstimateGas","transaction","args","forEach","formatter","i","send","methods_1","rpcCall","sdk_1","Object","enumerable","Safe","getChainInfo","getSafeInfo","currency","getSafeBalances","messageHash","signature","getInfo","safeInfo","encodedIsValidSignatureCall","signatures_1","encodeFunctionData","to","safeAddress","slice","toLowerCase","msgBytes","ethers_1","utils","arrayify","message","hashMessage","calculateMessageHash","isMessageHashSigned","messageHashSigned","checks","check1271Signature","bind","check1271SignatureBytes","check","EIP_1271_INTERFACE","Interface","EIP_1271_BYTES_INTERFACE","SafeAppsSDK","opts","whitelistedDomains","debug","communication_1","eth","eth_1","txs","txs_1","safe","safe_1","TXs","safeTxHash","getTxBySafeTxHash","messagePayload","signMessage","length","sendTransactions","package_json_1","logger","Logger","allowedTransactionKeys","chainId","gasLimit","gasPrice","nonce","value","type","accessList","maxFeePerGas","maxPriorityFeePerGas","customData","ccipReadEnabled","resolveName","resolver","nameOrPromise","name","throwArgumentError","getAddress","throwError","operation","address","resolveAddresses","paramType","all","map","index","components","baseType","makeError","argument","v","arrayChildren","populateTransaction","contract","fragment","overrides","inputs","shallowCopy","pop","checkArgumentCount","signer","resolveProperties","override","then","__awaiter","provider","resolvedAddress","resolved","interface","tx","ro","BigNumber","toNumber","accessListify","gas","intrinsic","bytes","add","roValue","isZero","payable","leftovers","keys","filter","key","l","JSON","stringify","addContractWait","wait","confirmations","receipt","events","logs","log","event","deepCopy","parsed","parseLog","e","decode","topics","decodeEventLog","eventFragment","eventSignature","removeListener","getBlock","blockHash","getTransaction","transactionHash","buildCall","collapseSimple","signerOrProvider","blockTag","push","deployTransaction","_deployed","result","decodeFunctionResult","outputs","code","buildDefault","constant","txRequest","sendTransaction","buildSend","getEventTag","topic","RunningEvent","tag","defineReadOnly","this","_listeners","listener","once","done","item","listenerCount","argsCopy","setTimeout","apply","ErrorRunningEvent","FragmentRunningEvent","contractInterface","getEventTopic","format","decodeError","errors","checkResultErrors","WildcardRunningEvent","BaseContract","addressOrName","getStatic","Signer","Provider","uniqueFilters","filters","encodeFilterTopics","warn","catch","uniqueNames","uniqueSignatures","functions","callStatic","buildPopulate","estimateGas","buildEstimate","signatures","substring","_deployedPromise","contractAddress","deployed","VoidSigner","constructor","runningEvent","_runningEvents","eventName","_normalizeRunningEvent","getEvent","emit","_wrappedEmits","off","_checkRunningEvents","prepareEvent","addListener","wrappedEmit","_wrapEvent","getEmit","on","fromBlockOrBlockhash","toBlock","_getRunningEvent","isHexString","fromBlock","getLogs","_addEventListener","run","reduce","accum","listeners","removeAllListeners","getContractAddress","Indexed","Contract","ContractFactory","bytecode","bytecodeHex","isBytes","hexlify","object","deploy","concat","encodeDeploy","unsignedTx","getDeployTransaction","getContract","compilerOutput","parse","abi","evm","getInterface","_constructorGuard","Zero","NegativeOne","throwFault","fault","zeros","getMultiplier","decimals","formatFixed","multiplier","negative","lt","mul","fraction","mod","match","whole","div","parseFixed","comps","wholeValue","fractionValue","wei","FixedFormat","constructorGuard","signed","width","String","_multiplier","freeze","defaultValue","FixedNumber","hex","_hex","_value","_isFixedNumber","other","_checkFormat","a","b","fromValue","sub","hasFraction","isNegative","subUnsafe","ONE","toFormat","addUnsafe","factor","bump","BUMP","mulUnsafe","floor","divUnsafe","fromTwos","toTwos","toHexString","hexZeroPad","parseFloat","fromString","isBigNumberish","fixedFormat","numeric","decimal","fromBytes","Wallet","privateKey","signingKey","SigningKey","computeAddress","publicKey","mnemonic","phrase","hasMnemonic","srcMnemonic","path","defaultPath","locale","node","HDNode","derivePath","curve","_mnemonic","_signingKey","signDigest","keccak256","serialize","joinSignature","domain","types","_TypedDataEncoder","populated","password","options","progressCallback","encryptKeystore","entropy","randomBytes","extraEntropy","hexDataSlice","entropyToMnemonic","fromMnemonic","json","decryptJsonWallet","account","decryptJsonWalletSync","wordlist","verifyMessage","recoverAddress","verifyTypedData","EtherSymbol","regexBytes","RegExp","regexNumber","regexArray","_pack","zeroPad","toUtf8Bytes","size","byteLength","pack","values","tight","hashKeccak256","sha256","hashSha256","createTable","func","lo","pair","createRangeTable","hi","h","matchMap","ranges","range","d","indexOf","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","s","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","nameprep","codes","toUtf8CodePoints","codesTableB2","codepoint","shift","_nameprepTableB2","_toUtf8String","UnicodeNormalizationForm","formatBytes32String","text","HashZero","parseBytes32String","toUtf8String","names","commify","suffix","formatted","unshift","formatUnits","unitName","parseUnits","formatEther","parseEther","ether","getUrl","href","headers","body","skipFetchSetup","mode","cache","credentials","redirect","referrer","fetchOptions","fetch","arrayBuffer","statusCode","status","statusMessage","statusText","staller","duration","bodyify","isBytesLike","trim","_fetchData","connection","processFunc","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","errorPassThrough","url","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","base64Encode","reData","dataMatch","base64Decode","replace","fromCharCode","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","Math","random","pow","serverError","throttleRetry","race","fetchJson","updated","k","poll","ceiling","interval","retryLimit","oncePoll","onceBlock","anyGlobal","_ethers","ethers","module","global","self","__self__","F","DOMException","prototype","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","normalizeName","TypeError","normalizeValue","iteratorFor","items","iterator","next","Headers","append","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","bufferClone","buf","view","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","readAsText","chars","readArrayBufferAsText","formData","oldValue","has","hasOwnProperty","callback","thisArg","entries","methods","Request","input","upcased","signal","toUpperCase","form","decodeURIComponent","Response","bodyInit","ok","clone","redirectStatuses","RangeError","err","stack","create","init","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","removeEventListener","polyfill","defineProperty","ponyfill","ctx","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","t","definition","o","prop","r","toStringTag","SafeAppAccessPolicyTypes","Operation","TransactionStatus","TransferDirection","TransactionTokenType","LabelValue","RPC_AUTHENTICATION","GAS_PRICE_TYPE","FEATURES","TokenType","fetchData","p","resp","errTxt","callEndpoint","baseUrl","parameters","rawUrl","template","str","replaceParam","insertParams","query","searchParams","searchString","stringifyQuery","getBalances","getFiatCurrencies","getOwnedSafes","getCollectibles","getTransactionHistory","pageUrl","safe_address","getTransactionQueue","getTransactionDetails","transactionId","postSafeGasEstimation","proposeTransaction","getChainsConfig","getChainConfig","getSafeApps","getMasterCopies","getDecodedData","encodedData"],"sourceRoot":""}