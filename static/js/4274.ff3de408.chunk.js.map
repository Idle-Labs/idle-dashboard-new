{"version":3,"file":"static/js/4274.ff3de408.chunk.js","mappings":"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","sources":["components/Card/Card.tsx","components/StrategyAssetsCarousel/StrategyAssetsCarousel.tsx","../node_modules/@chakra-ui/progress/dist/index.esm.js"],"sourcesContent":["import { Heading, Flex, Box, FlexProps, BoxProps, ThemingProps } from '@chakra-ui/react'\n\nexport type CardProps = BoxProps & ThemingProps \n\nconst HeadingTitle = (props: CardProps) => {\n  const { children, ...rest } = props\n  return (\n    <Heading as={'h3'} size={'md'} mb={6} {...rest}>{children}</Heading>\n  )\n}\n\nexport const Card = (props: CardProps) => {\n  const { children, layerStyle, ...rest } = props\n  return (\n    <Box\n      width={'100%'}\n      position={'relative'}\n      layerStyle={layerStyle || 'card'}\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport const CardFlex = (props: CardProps & FlexProps) => {\n  const { children, layerStyle, ...rest } = props\n  return (\n    <Flex\n      width={'100%'}\n      layerStyle={layerStyle || 'card'}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport const Dark = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardDark'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nexport const Light = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardLight'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nexport const Outline = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardOutline'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nCard.Dark = Dark\nCard.Light = Light\nCard.Flex = CardFlex\nCard.Outline = Outline\nCard.Heading = HeadingTitle","import { Card } from 'components/Card/Card'\nimport { strategies } from 'constants/strategies'\nimport { HStack, Text, Progress, Box } from '@chakra-ui/react'\nimport { Translation } from 'components/Translation/Translation'\nimport { usePortfolioProvider } from 'contexts/PortfolioProvider'\nimport { AssetProvider } from 'components/AssetProvider/AssetProvider'\nimport React, { useMemo, useState, useEffect, useCallback } from 'react'\n\ntype StrategyAssetsCarouselArgs = {\n  strategy: string\n}\n\nexport const StrategyAssetsCarousel: React.FC<StrategyAssetsCarouselArgs> = ({ strategy }) => {\n  const [ assetIndex, setAssetIndex ] = useState<number>(0)\n  const [ progressValue, setProgressValue ] = useState<number>(0)\n  const { isPortfolioLoaded,  selectors: { selectVaultsAssetsByType } } = usePortfolioProvider()\n\n  const assets = useMemo(() => {\n    if (!selectVaultsAssetsByType) return null\n    return selectVaultsAssetsByType(strategy)\n  }, [selectVaultsAssetsByType, strategy])\n\n  const strategyProps = strategies[strategy]\n\n  const getNextAssetIndex = useCallback(() => {\n    return assetIndex === assets.length-1 ? 0 : assetIndex+1\n  }, [assets, assetIndex])\n\n  useEffect(() => {\n    if (!assets || !isPortfolioLoaded) return\n    setTimeout(() => {\n      setProgressValue(0)\n      setAssetIndex(getNextAssetIndex())\n    }, 4000)\n  }, [assets, isPortfolioLoaded, getNextAssetIndex])\n\n  useEffect(() => {\n    if (!assets || !isPortfolioLoaded) return\n    setTimeout(() => {\n      setProgressValue(100)\n    }, 10)\n  }, [assets, isPortfolioLoaded, assetIndex])\n\n  return (\n    <Card.Light\n      py={4}\n      px={6}\n      overflow={'hidden'}\n      position={'relative'}\n      width={['100%', '400px']}\n    >\n      <AssetProvider assetId={assets && assets[assetIndex]?.id}>\n        <HStack\n          spacing={10}\n          width={'100%'}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <AssetProvider.Icon width={10} height={10} />\n          <HStack>\n            <Translation component={Text} translation={'defi.tvl'} textStyle={'captionSmall'} />\n            <AssetProvider.PoolUsd textStyle={['ctaStatic', 'h3']} />\n          </HStack>\n          <HStack>\n            <Translation component={Text} translation={'defi.apy'} textStyle={'captionSmall'} />\n            <AssetProvider.Apy textStyle={['ctaStatic', 'h3']} />\n          </HStack>\n        </HStack>\n      </AssetProvider>\n      <Box\n        left={0}\n        bottom={0}\n        width={'100%'}\n        position={'absolute'}\n      >\n        <Progress\n          value={progressValue}\n          size={'xs'}\n          colorScheme={strategy}\n          sx={{\n            \"& > div:first-child\": {\n              transitionDuration: !progressValue ? '0s' : '4s',\n              transitionProperty: \"width\",\n            },\n          }}\n        />\n      </Box>\n    </Card.Light>\n  )\n}","// ../../react-shim.js\nimport React from \"react\";\n\n// src/circular-progress.tsx\nimport { chakra as chakra3 } from \"@chakra-ui/system\";\n\n// src/progress.utils.tsx\nimport { keyframes } from \"@chakra-ui/system\";\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nvar spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nvar rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar progress = keyframes({\n  \"0%\": { left: \"-40%\" },\n  \"100%\": { left: \"100%\" }\n});\nvar stripe = keyframes({\n  from: { backgroundPosition: \"1rem 0\" },\n  to: { backgroundPosition: \"0 0\" }\n});\nfunction getProgressProps(options) {\n  const {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate\n  } = options;\n  const percent = valueToPercent(value, min, max);\n  const getAriaValueText = () => {\n    if (value == null)\n      return void 0;\n    return typeof getValueText === \"function\" ? getValueText(value, percent) : valueText;\n  };\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : void 0,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? void 0 : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role: \"progressbar\"\n    },\n    percent,\n    value\n  };\n}\n\n// src/shape.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar Shape = (props) => {\n  const { size, isIndeterminate, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra.svg, {\n    viewBox: \"0 0 100 100\",\n    __css: {\n      width: size,\n      height: size,\n      animation: isIndeterminate ? `${rotate} 2s linear infinite` : void 0\n    },\n    ...rest\n  });\n};\nShape.displayName = \"Shape\";\n\n// src/circle.tsx\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nvar Circle = (props) => /* @__PURE__ */ React.createElement(chakra2.circle, {\n  cx: 50,\n  cy: 50,\n  r: 42,\n  fill: \"transparent\",\n  ...props\n});\nCircle.displayName = \"Circle\";\n\n// src/circular-progress.tsx\nvar CircularProgress = (props) => {\n  const {\n    size = \"48px\",\n    max = 100,\n    min = 0,\n    valueText,\n    getValueText,\n    value,\n    capIsRound,\n    children,\n    thickness = \"10px\",\n    color = \"#0078d4\",\n    trackColor = \"#edebe9\",\n    isIndeterminate,\n    ...rest\n  } = props;\n  const progress2 = getProgressProps({\n    min,\n    max,\n    value,\n    valueText,\n    getValueText,\n    isIndeterminate\n  });\n  const determinant = isIndeterminate ? void 0 : (progress2.percent ?? 0) * 2.64;\n  const strokeDasharray = determinant == null ? void 0 : `${determinant} ${264 - determinant}`;\n  const indicatorProps = isIndeterminate ? {\n    css: { animation: `${spin} 1.5s linear infinite` }\n  } : {\n    strokeDashoffset: 66,\n    strokeDasharray,\n    transitionProperty: \"stroke-dasharray, stroke\",\n    transitionDuration: \"0.6s\",\n    transitionTimingFunction: \"ease\"\n  };\n  const rootStyles = {\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    fontSize: size\n  };\n  return /* @__PURE__ */ React.createElement(chakra3.div, {\n    className: \"chakra-progress\",\n    ...progress2.bind,\n    ...rest,\n    __css: rootStyles\n  }, /* @__PURE__ */ React.createElement(Shape, {\n    size,\n    isIndeterminate\n  }, /* @__PURE__ */ React.createElement(Circle, {\n    stroke: trackColor,\n    strokeWidth: thickness,\n    className: \"chakra-progress__track\"\n  }), /* @__PURE__ */ React.createElement(Circle, {\n    stroke: color,\n    strokeWidth: thickness,\n    className: \"chakra-progress__indicator\",\n    strokeLinecap: capIsRound ? \"round\" : void 0,\n    opacity: progress2.value === 0 && !isIndeterminate ? 0 : void 0,\n    ...indicatorProps\n  })), children);\n};\nCircularProgress.displayName = \"CircularProgress\";\n\n// src/progress.tsx\nimport {\n  chakra as chakra4,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ProgressStylesProvider, useProgressStyles] = createContext({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgressStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `\n});\nvar ProgressFilledTrack = (props) => {\n  const { min, max, value, isIndeterminate, ...rest } = props;\n  const progress2 = getProgressProps({ value, min, max, isIndeterminate });\n  const styles = useProgressStyles();\n  const trackStyles = {\n    height: \"100%\",\n    ...styles.filledTrack\n  };\n  return /* @__PURE__ */ React.createElement(chakra4.div, {\n    style: {\n      width: `${progress2.percent}%`,\n      ...rest.style\n    },\n    ...progress2.bind,\n    ...rest,\n    __css: trackStyles\n  });\n};\nvar Progress = (props) => {\n  var _a;\n  const {\n    value,\n    min = 0,\n    max = 100,\n    hasStripe,\n    isAnimated,\n    children,\n    borderRadius: propBorderRadius,\n    isIndeterminate,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Progress\", props);\n  const borderRadius = propBorderRadius ?? ((_a = styles.track) == null ? void 0 : _a.borderRadius);\n  const stripeAnimation = { animation: `${stripe} 1s linear infinite` };\n  const shouldAddStripe = !isIndeterminate && hasStripe;\n  const shouldAnimateStripe = shouldAddStripe && isAnimated;\n  const css = {\n    ...shouldAnimateStripe && stripeAnimation,\n    ...isIndeterminate && {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: `${progress} 1s ease infinite normal none running`\n    }\n  };\n  const trackStyles = {\n    overflow: \"hidden\",\n    position: \"relative\",\n    ...styles.track\n  };\n  return /* @__PURE__ */ React.createElement(chakra4.div, {\n    borderRadius,\n    __css: trackStyles,\n    ...rest\n  }, /* @__PURE__ */ React.createElement(ProgressStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(ProgressFilledTrack, {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    min,\n    max,\n    value,\n    isIndeterminate,\n    css,\n    borderRadius\n  }), children));\n};\nProgress.displayName = \"Progress\";\n\n// src/progress-label.tsx\nimport { chakra as chakra5 } from \"@chakra-ui/system\";\nvar ProgressLabel = (props) => {\n  const styles = useProgressStyles();\n  const labelStyles = {\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\",\n    ...styles.label\n  };\n  return /* @__PURE__ */ React.createElement(chakra5.div, {\n    ...props,\n    __css: labelStyles\n  });\n};\nProgressLabel.displayName = \"ProgressLabel\";\n\n// src/circular-progress-label.tsx\nimport { chakra as chakra6 } from \"@chakra-ui/system\";\nvar CircularProgressLabel = chakra6(\"div\", {\n  baseStyle: {\n    fontSize: \"0.24em\",\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\"\n  }\n});\nCircularProgressLabel.displayName = \"CircularProgressLabel\";\nexport {\n  CircularProgress,\n  CircularProgressLabel,\n  Progress,\n  ProgressLabel,\n  useProgressStyles\n};\n"],"names":["Card","props","children","layerStyle","rest","width","position","CardFlex","Dark","concat","Light","Outline","Flex","Heading","as","size","mb","StrategyAssetsCarousel","strategy","useState","assetIndex","setAssetIndex","progressValue","setProgressValue","usePortfolioProvider","isPortfolioLoaded","selectVaultsAssetsByType","selectors","assets","useMemo","getNextAssetIndex","strategies","useCallback","length","useEffect","setTimeout","py","px","overflow","AssetProvider","assetId","id","spacing","alignItems","justifyContent","height","Translation","component","Text","translation","textStyle","left","bottom","value","colorScheme","sx","transitionDuration","transitionProperty","spin","keyframes","strokeDasharray","strokeDashoffset","rotate","transform","progress","stripe","from","backgroundPosition","to","getProgressProps","options","min","max","valueText","getValueText","isIndeterminate","percent","valueToPercent","bind","getAriaValueText","role","Shape","React","chakra","viewBox","__css","animation","displayName","Circle","chakra2","cx","cy","r","fill","CircularProgress","capIsRound","thickness","color","trackColor","progress2","determinant","indicatorProps","css","transitionTimingFunction","rootStyles","display","verticalAlign","fontSize","chakra3","className","stroke","strokeWidth","strokeLinecap","opacity","createContext","name","errorMessage","ProgressStylesProvider","useProgressStyles","ProgressFilledTrack","styles","trackStyles","filledTrack","chakra4","style","Progress","_a","omitThemingProps","hasStripe","isAnimated","propBorderRadius","borderRadius","ariaLabel","ariaLabelledBy","useMultiStyleConfig","track","stripeAnimation","shouldAnimateStripe","willChange","minWidth","CircularProgressLabel","chakra6","baseStyle","top","textAlign"],"sourceRoot":""}