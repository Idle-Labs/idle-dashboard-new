{"version":3,"file":"static/js/244.4ad937c6.chunk.js","mappings":"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","sources":["components/AssetLabel/AssetLabel.tsx","components/Card/Card.tsx","components/VaultRewardOverview/VaultRewardOverview.tsx"],"sourcesContent":["import type { AssetId } from 'constants/types'\nimport { HStack, TextProps } from '@chakra-ui/react'\nimport { AssetProvider } from 'components/AssetProvider/AssetProvider'\n\ntype AssetLabelProps = {\n  size?: string\n  assetId: AssetId | undefined\n} & TextProps\n\nexport const AssetLabel: React.FC<AssetLabelProps> = ({ assetId, size = 'sm', ...textProps }) => {\n  return (\n    <AssetProvider\n      wrapFlex={false}\n      assetId={assetId}\n    >\n      <HStack\n        alignItems={'center'}\n        justifyContent={'flex-start'}\n      >\n        <AssetProvider.Icon size={size} />\n        <AssetProvider.Name textStyle={'heading'} fontSize={'h3'} whiteSpace={'nowrap'} {...textProps} />\n      </HStack>\n    </AssetProvider>\n  )\n}","import { Heading, Flex, Box, FlexProps, BoxProps, ThemingProps } from '@chakra-ui/react'\n\nexport type CardProps = BoxProps & ThemingProps \n\nconst HeadingTitle = (props: CardProps) => {\n  const { children, ...rest } = props\n  return (\n    <Heading as={'h3'} size={'md'} mb={6} {...rest}>{children}</Heading>\n  )\n}\n\nexport const Card = (props: CardProps) => {\n  const { children, layerStyle, ...rest } = props\n  return (\n    <Box\n      width={'100%'}\n      position={'relative'}\n      layerStyle={layerStyle || 'card'}\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport const CardFlex = (props: CardProps & FlexProps) => {\n  const { children, layerStyle, ...rest } = props\n  return (\n    <Flex\n      width={'100%'}\n      layerStyle={layerStyle || 'card'}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport const Dark = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardDark'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nexport const Light = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardLight'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nexport const Outline = (props: CardProps) => {\n  const { children, ...rest } = props\n  const layerStyle: string[] = ['cardOutline'].concat(props.layerStyle as string[])\n  return (\n    <Card {...rest} layerStyle={layerStyle}>{children}</Card>\n  )\n}\n\nCard.Dark = Dark\nCard.Light = Light\nCard.Flex = CardFlex\nCard.Outline = Outline\nCard.Heading = HeadingTitle","import React from 'react'\nimport { Card } from 'components/Card/Card'\nimport { Amount } from 'components/Amount/Amount'\nimport type { VaultRewards, AssetId } from 'constants/types'\nimport { AssetLabel } from 'components/AssetLabel/AssetLabel'\nimport { Translation } from 'components/Translation/Translation'\nimport { VStack, HStack, Text, SimpleGrid } from '@chakra-ui/react'\nimport { AssetProvider } from 'components/AssetProvider/AssetProvider'\n\ntype RewardProps = {\n  assetId: AssetId\n} & VaultRewards\n\nexport const VaultRewardOverview: React.FC<RewardProps> = ({\n  assetId,\n  assets,\n  amount\n}) => {\n  return (\n    <AssetProvider\n      wrapFlex={false}\n      assetId={assetId}\n    >\n      <Card\n        p={6}\n      >\n        <VStack\n          spacing={5}\n          alignItems={'flex-start'}\n        >\n          <AssetLabel assetId={assetId} />\n          <HStack\n            width={'100%'}\n            justifyContent={'space-between'}\n          >\n            <VStack\n              spacing={1}\n              alignItems={'flex-start'}\n            >\n              <Translation component={Text} translation={'defi.vaults'} textStyle={'captionSmall'} />\n              <HStack\n                spacing={0}\n              >\n                {\n                  assets.map( (assetId: AssetId, index: number) => (\n                    <AssetProvider key={`asset_${assetId}`} assetId={assetId}>\n                      <AssetProvider.Icon size={'xs'} ml={index ? -1 : 0} showTooltip={true} />\n                    </AssetProvider>\n                  ))\n                }\n              </HStack>\n            </VStack>\n\n            <VStack\n              spacing={1}\n              alignItems={'flex-start'}\n            >\n              <Translation component={Text} translation={'defi.claimable'} textStyle={'captionSmall'} />\n              <HStack\n                spacing={1}\n              >\n                <Amount value={amount} decimals={8} textStyle={'tableCell'} />\n                <AssetProvider.Name textStyle={'tableCell'} />\n              </HStack>\n            </VStack>\n          </HStack>\n        </VStack>\n      </Card>\n    </AssetProvider>\n  )\n}"],"names":["AssetLabel","assetId","size","textProps","AssetProvider","wrapFlex","alignItems","justifyContent","textStyle","fontSize","whiteSpace","Card","props","children","layerStyle","rest","width","position","CardFlex","Dark","concat","Light","Outline","Flex","Heading","as","mb","VaultRewardOverview","assets","amount","p","spacing","Translation","component","Text","translation","map","index","ml","showTooltip","Amount","value","decimals"],"sourceRoot":""}